/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  RetirementCertificates,
  RetirementCertificatesInterface,
} from '../../../contracts/retirements/RetirementCertificates';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'baseURI',
        type: 'string',
      },
    ],
    name: 'BaseURISet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'CertificateMinted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'CertificateUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'eventIds',
        type: 'uint256[]',
      },
    ],
    name: 'EventsAttached',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newAmount',
        type: 'uint256',
      },
    ],
    name: 'MinValidAmountSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'ContractRegistry',
        type: 'address',
      },
    ],
    name: 'ToucanRegistrySet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION_RELEASE_CANDIDATE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: 'retirementEventIds',
        type: 'uint256[]',
      },
    ],
    name: 'attachRetirementEvents',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'baseURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'certificates',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256[]',
            name: 'retirementEventIds',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256',
            name: 'createdAt',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'retiringEntity',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
          {
            internalType: 'string',
            name: 'retiringEntityString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'retirementMessage',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryLocation',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'consumptionCountryCode',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodStart',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodEnd',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'string',
                name: 'serialNumber',
                type: 'string',
              },
              {
                internalType: 'uint256',
                name: 'quantity',
                type: 'uint256',
              },
            ],
            internalType: 'struct MinimalBatchData[]',
            name: 'retiredBatchesData',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct CertificateData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'claimedEvents',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getData',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256[]',
            name: 'retirementEventIds',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256',
            name: 'createdAt',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'retiringEntity',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
          {
            internalType: 'string',
            name: 'retiringEntityString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'retirementMessage',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryLocation',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'consumptionCountryCode',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodStart',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodEnd',
            type: 'uint256',
          },
          {
            components: [
              {
                internalType: 'string',
                name: 'serialNumber',
                type: 'string',
              },
              {
                internalType: 'uint256',
                name: 'quantity',
                type: 'uint256',
              },
            ],
            internalType: 'struct MinimalBatchData[]',
            name: 'retiredBatchesData',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct CertificateData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getRetiredAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getRetiredAmountInKilos',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getRetiredAmountInTonnes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
    ],
    name: 'getUserEvents',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_contractRegistry',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_baseURI',
        type: 'string',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'string[]',
        name: 'registries',
        type: 'string[]',
      },
    ],
    name: 'isCertificateForRegistry',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'kiloDenomination',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minValidRetirementAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'retiringEntity',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'retiringEntityString',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'beneficiaryString',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'retirementMessage',
        type: 'string',
      },
      {
        internalType: 'uint256[]',
        name: 'retirementEventIds',
        type: 'uint256[]',
      },
    ],
    name: 'mintCertificate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'retiringEntity',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256[]',
            name: 'tokenIds',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'retiringEntityString',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
          {
            internalType: 'string',
            name: 'beneficiaryString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'retirementMessage',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryLocation',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'consumptionCountryCode',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodStart',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodEnd',
            type: 'uint256',
          },
        ],
        internalType: 'struct CreateRetirementRequestParams',
        name: 'params',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'retirementEventIds',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'string',
            name: 'serialNumber',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'quantity',
            type: 'uint256',
          },
        ],
        internalType: 'struct MinimalBatchData[]',
        name: 'retiredBatchesData',
        type: 'tuple[]',
      },
    ],
    name: 'mintCertificateWithExtraData',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'retiringEntity',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'projectVintageTokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'isLegacy',
        type: 'bool',
      },
    ],
    name: 'registerEvent',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'retireEventCounter',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'eventId',
        type: 'uint256',
      },
    ],
    name: 'retirements',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'createdAt',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'retiringEntity',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'projectVintageTokenId',
            type: 'uint256',
          },
        ],
        internalType: 'struct RetirementEvent',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'baseURI_',
        type: 'string',
      },
    ],
    name: 'setBaseURI',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'setMinValidRetirementAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
    ],
    name: 'setToucanContractRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tonneDenomination',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'retiringEntityString',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'beneficiaryString',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'retirementMessage',
        type: 'string',
      },
    ],
    name: 'updateCertificate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051614fb66200011f600039600081816114a2015281816114e20152818161159c015281816115dc015261166f0152614fb66000f3fe6080604052600436106102725760003560e01c8063715018a61161014f578063c87b56dd116100c1578063f2fde38b1161007a578063f2fde38b146107a1578063f3823bad146107c1578063f399e22e146107e1578063fa272a3214610801578063ff01167714610821578063ffa1ad741461084157600080fd5b8063c87b56dd146106e6578063d791399e14610706578063d84650be14610726578063d894203d14610741578063e882e37b14610761578063e985e9c51461078157600080fd5b8063abf410e511610113578063abf410e514610621578063b2114f4114610642578063b88d4fde14610673578063bba34a3714610693578063bbec9a2e146106b3578063c6986067146106cf57600080fd5b8063715018a6146105a25780638da5cb5b146105b757806395d89b41146105d557806399b00a8d146105ea578063a22cb4651461060157600080fd5b80633659cfe6116101e857806361e4678b116101ac57806361e4678b146104bc5780636352211e14610518578063663b3e22146105385780636c0360eb146105585780636ca0b0d71461056d57806370a082311461058257600080fd5b80633659cfe61461043457806342842e0e146104545780634f1ef2861461047457806352d1902d1461048757806355f804b31461049c57600080fd5b80630d4b53e71161023a5780630d4b53e714610359578063163c131914610387578063171e5ba2146103a75780632363b8b1146103d457806323b872dd146103f457806327de49ee1461041457600080fd5b80630178fe3f1461027757806301ffc9a7146102ad57806306fdde03146102dd578063081812fc146102ff578063095ea7b314610337575b600080fd5b34801561028357600080fd5b50610297610292366004613c81565b610872565b6040516102a49190613d9b565b60405180910390f35b3480156102b957600080fd5b506102cd6102c8366004613ed6565b610d03565b60405190151581526020016102a4565b3480156102e957600080fd5b506102f2610d55565b6040516102a49190613ef3565b34801561030b57600080fd5b5061031f61031a366004613c81565b610de7565b6040516001600160a01b0390911681526020016102a4565b34801561034357600080fd5b50610357610352366004613f2b565b610e0e565b005b34801561036557600080fd5b50610379610374366004613c81565b610f28565b6040519081526020016102a4565b34801561039357600080fd5b506103796103a2366004613fe3565b610ffc565b3480156103b357600080fd5b506103c76103c23660046140cd565b6111b7565b6040516102a491906140ea565b3480156103e057600080fd5b506103796103ef3660046140fd565b611224565b34801561040057600080fd5b5061035761040f3660046141ac565b6112d7565b34801561042057600080fd5b5061037961042f3660046141fb565b611308565b34801561044057600080fd5b5061035761044f3660046140cd565b611498565b34801561046057600080fd5b5061035761046f3660046141ac565b611577565b610357610482366004614376565b611592565b34801561049357600080fd5b50610379611662565b3480156104a857600080fd5b506103576104b73660046143c5565b611715565b3480156104c857600080fd5b506104dc6104d7366004613c81565b61176c565b6040516102a49190815181526020808301516001600160a01b031690820152604080830151908201526060918201519181019190915260800190565b34801561052457600080fd5b5061031f610533366004613c81565b6117ef565b34801561054457600080fd5b50610297610553366004613c81565b61184f565b34801561056457600080fd5b506102f2611cd2565b34801561057957600080fd5b50610379600181565b34801561058e57600080fd5b5061037961059d3660046140cd565b611d61565b3480156105ae57600080fd5b50610357611de7565b3480156105c357600080fd5b506097546001600160a01b031661031f565b3480156105e157600080fd5b506102f2611dfb565b3480156105f657600080fd5b5061037961012d5481565b34801561060d57600080fd5b5061035761061c3660046143f9565b611e0a565b34801561062d57600080fd5b506101325461031f906001600160a01b031681565b34801561064e57600080fd5b506102cd61065d366004613c81565b61012f6020526000908152604090205460ff1681565b34801561067f57600080fd5b5061035761068e366004614432565b611e15565b34801561069f57600080fd5b506103576106ae36600461449d565b611e4d565b3480156106bf57600080fd5b50610379670de0b6b3a764000081565b3480156106db57600080fd5b506103796101355481565b3480156106f257600080fd5b506102f2610701366004613c81565b6120a8565b34801561071257600080fd5b50610379610721366004613c81565b61213a565b34801561073257600080fd5b5061037966038d7ea4c6800081565b34801561074d57600080fd5b5061035761075c366004614554565b6121f6565b34801561076d57600080fd5b5061035761077c3660046140cd565b6122d4565b34801561078d57600080fd5b506102cd61079c36600461459f565b61232b565b3480156107ad57600080fd5b506103576107bc3660046140cd565b612359565b3480156107cd57600080fd5b506102cd6107dc3660046145f0565b6123cf565b3480156107ed57600080fd5b506103576107fc366004614376565b61258d565b34801561080d57600080fd5b5061037961081c366004613c81565b61272d565b34801561082d57600080fd5b5061035761083c366004613c81565b6127fa565b34801561084d57600080fd5b506102f2604051806040016040528060058152602001640312e312e360dc1b81525081565b61087a613b01565b60008281526101346020908152604091829020825181546101a093810282018401909452610180810184815290939192849284918401828280156108dd57602002820191906000526020600020905b8154815260200190600101908083116108c9575b50505091835250506001820154602082015260028201546001600160a01b0390811660408301526003830154166060820152600482018054608090920191610924906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610950906146ac565b801561099d5780601f106109725761010080835404028352916020019161099d565b820191906000526020600020905b81548152906001019060200180831161098057829003601f168201915b505050505081526020016005820180546109b6906146ac565b80601f01602080910402602001604051908101604052809291908181526020018280546109e2906146ac565b8015610a2f5780601f10610a0457610100808354040283529160200191610a2f565b820191906000526020600020905b815481529060010190602001808311610a1257829003601f168201915b50505050508152602001600682018054610a48906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610a74906146ac565b8015610ac15780601f10610a9657610100808354040283529160200191610ac1565b820191906000526020600020905b815481529060010190602001808311610aa457829003601f168201915b50505050508152602001600782018054610ada906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b06906146ac565b8015610b535780601f10610b2857610100808354040283529160200191610b53565b820191906000526020600020905b815481529060010190602001808311610b3657829003601f168201915b50505050508152602001600882018054610b6c906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610b98906146ac565b8015610be55780601f10610bba57610100808354040283529160200191610be5565b820191906000526020600020905b815481529060010190602001808311610bc857829003601f168201915b5050505050815260200160098201548152602001600a8201548152602001600b8201805480602002602001604051908101604052809291908181526020016000905b82821015610cf55783829060005260206000209060020201604051806040016040529081600082018054610c5a906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610c86906146ac565b8015610cd35780601f10610ca857610100808354040283529160200191610cd3565b820191906000526020600020905b815481529060010190602001808311610cb657829003601f168201915b5050505050815260200160018201548152505081526020019060010190610c27565b505050915250909392505050565b60006001600160e01b031982166380ac58cd60e01b1480610d3457506001600160e01b03198216635b5e139f60e01b145b80610d4f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060658054610d64906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610d90906146ac565b8015610ddd5780601f10610db257610100808354040283529160200191610ddd565b820191906000526020600020905b815481529060010190602001808311610dc057829003601f168201915b5050505050905090565b6000610df282612886565b506000908152606960205260409020546001600160a01b031690565b6000610e19826117ef565b9050806001600160a01b0316836001600160a01b031603610e8b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610ea75750610ea7813361232b565b610f195760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610e82565b610f2383836128e5565b505050565b600081815261013460209081526040808320805482518185028101850190935280835284938493929190830182828015610f8157602002820191906000526020600020905b815481526020019060010190808311610f6d575b5050505050905060005b8151811015610fe25761012e6000838381518110610fab57610fab6146e6565b602002602001015181526020019081526020016000206002015483610fd09190614712565b9250610fdb8161472a565b9050610f8b565b50610ff466038d7ea4c6800083614743565b949350505050565b6000611006612953565b604080516000610140820181815261016083018452825260208083018290528351601f8e0182900482028101820185528d81529193830191908e908e90819084018382808284376000920191909152505050908252506001600160a01b038b1660208083019190915260408051601f8c0183900483028101830182528b8152920191908b908b9081908401838280828437600092019190915250505090825250604080516020601f8a018190048102820181019092528881529181019190899089908190840183828082843760009201829052509385525050604080516020818101835284825280860191909152815180820183528481528286015260608501849052608090940192909252508051868302818101840190925286815292935061119b928f9285928991899182918501908490808284376000920182905250925061114f915050565b60405190808252806020026020018201604052801561119557816020015b60408051808201909152606081526000602082015281526020019060019003908161116d5790505b506129ae565b9150506111a9600161013655565b9a9950505050505050505050565b6001600160a01b0381166000908152610130602090815260409182902080548351818402810184019094528084526060939283018282801561121857602002820191906000526020600020905b815481526020019060010190808311611204575b50505050509050919050565b600061122e612953565b81841461126e5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610e82565b6112c08761127b886147cb565b8787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506112bb92508891508990506148fe565b6129ae565b90506112cd600161013655565b9695505050505050565b6112e13382612c6b565b6112fd5760405162461bcd60e51b8152600401610e82906149ab565b610f23838383612cc9565b61013254604051633a37b16d60e11b81523360048201526000916001600160a01b03169063746f62da90602401602060405180830381865afa158015611352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113769190614a03565b6113b65760405162461bcd60e51b815260206004820152601160248201527021b0b63632b9103737ba1030902a21a79960791b6044820152606401610e82565b82158015906113c85750610135548310155b6114055760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610e82565b61012d80546001908101918290556001600160a01b03871660009081526101306020908152604082208054938401815582529020018190558261145557600081815261012e602052604090204290555b600081815261012e602052604090206001810180546001600160a01b0319166001600160a01b038916179055600281018590556003018590559050949350505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036114e05760405162461bcd60e51b8152600401610e8290614a20565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611529600080516020614f3a833981519152546001600160a01b031690565b6001600160a01b03161461154f5760405162461bcd60e51b8152600401610e8290614a6c565b61155881612e2d565b6040805160008082526020820190925261157491839190612e35565b50565b610f2383838360405180602001604052806000815250611e15565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036115da5760405162461bcd60e51b8152600401610e8290614a20565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611623600080516020614f3a833981519152546001600160a01b031690565b6001600160a01b0316146116495760405162461bcd60e51b8152600401610e8290614a6c565b61165282612e2d565b61165e82826001612e35565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146117025760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610e82565b50600080516020614f3a83398151915290565b61171d612fa0565b805161173190610131906020840190613b74565b507ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f6816040516117619190613ef3565b60405180910390a150565b6117a060405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b50600090815261012e602090815260409182902082516080810184528154815260018201546001600160a01b031692810192909252600281015492820192909252600390910154606082015290565b6000818152606760205260408120546001600160a01b031680610d4f5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610e82565b611857613b01565b60008281526101346020908152604091829020825181546101a093810282018401909452610180810184815290939192849284918401828280156118ba57602002820191906000526020600020905b8154815260200190600101908083116118a6575b50505091835250506001820154602082015260028201546001600160a01b0390811660408301526003830154166060820152600482018054608090920191611901906146ac565b80601f016020809104026020016040519081016040528092919081815260200182805461192d906146ac565b801561197a5780601f1061194f5761010080835404028352916020019161197a565b820191906000526020600020905b81548152906001019060200180831161195d57829003601f168201915b50505050508152602001600582018054611993906146ac565b80601f01602080910402602001604051908101604052809291908181526020018280546119bf906146ac565b8015611a0c5780601f106119e157610100808354040283529160200191611a0c565b820191906000526020600020905b8154815290600101906020018083116119ef57829003601f168201915b50505050508152602001600682018054611a25906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611a51906146ac565b8015611a9e5780601f10611a7357610100808354040283529160200191611a9e565b820191906000526020600020905b815481529060010190602001808311611a8157829003601f168201915b50505050508152602001600782018054611ab7906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae3906146ac565b8015611b305780601f10611b0557610100808354040283529160200191611b30565b820191906000526020600020905b815481529060010190602001808311611b1357829003601f168201915b50505050508152602001600882018054611b49906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611b75906146ac565b8015611bc25780601f10611b9757610100808354040283529160200191611bc2565b820191906000526020600020905b815481529060010190602001808311611ba557829003601f168201915b5050505050815260200160098201548152602001600a8201548152602001600b8201805480602002602001604051908101604052809291908181526020016000905b82821015610cf55783829060005260206000209060020201604051806040016040529081600082018054611c37906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611c63906146ac565b8015611cb05780601f10611c8557610100808354040283529160200191611cb0565b820191906000526020600020905b815481529060010190602001808311611c9357829003601f168201915b5050505050815260200160018201548152505081526020019060010190611c04565b6101318054611ce0906146ac565b80601f0160208091040260200160405190810160405280929190818152602001828054611d0c906146ac565b8015611d595780601f10611d2e57610100808354040283529160200191611d59565b820191906000526020600020905b815481529060010190602001808311611d3c57829003601f168201915b505050505081565b60006001600160a01b038216611dcb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610e82565b506001600160a01b031660009081526068602052604090205490565b611def612fa0565b611df96000612ffa565b565b606060668054610d64906146ac565b61165e33838361304c565b611e1f3383612c6b565b611e3b5760405162461bcd60e51b8152600401610e82906149ab565b611e478484848461311a565b50505050565b604080516001808252818301909252600091816020015b6060815260200190600190039081611e6457905050905060405180604001604052806005815260200164766572726160d81b81525081600081518110611eac57611eac6146e6565b6020026020010181905250611ec189826123cf565b611f005760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726567697374727960801b6044820152606401610e82565b611f09896117ef565b6001600160a01b0316336001600160a01b031614611f5f5760405162461bcd60e51b815260206004820152601360248201527229b2b73232b91034b9903737ba1037bbb732b960691b6044820152606401610e82565b60008981526101346020526040902060010154611f7f9062015180614712565b4210611fc05760405162461bcd60e51b815260206004820152601060248201526f0c8d081a1bdd5c9cc8195b185c1cd95960821b6044820152606401610e82565b8615611fe557600089815261013460205260409020611fe3906004018989613bf8565b505b6001600160a01b038616156120205760008981526101346020526040902060030180546001600160a01b0319166001600160a01b0388161790555b831561204557600089815261013460205260409020612043906005018686613bf8565b505b811561206a57600089815261013460205260409020612068906006018484613bf8565b505b6040518981527f9a100d2018161ede6ca34c8007992b09bbffc636a636014a922e4c87504126289060200160405180910390a1505050505050505050565b6000818152606760205260409020546060906001600160a01b03166121075760405162461bcd60e51b8152602060048201526015602482015274139bdb8b595e1a5cdd195b9d081d1bdad95b881a59605a1b6044820152606401610e82565b6101316121138361314d565b604051602001612124929190614ad4565b6040516020818303038152906040529050919050565b6000818152610134602090815260408083208054825181850281018501909352808352849383018282801561218e57602002820191906000526020600020905b81548152602001906001019080831161217a575b5050505050905060005b81518110156121ef5761012e60008383815181106121b8576121b86146e6565b6020026020010151815260200190815260200160002060020154836121dd9190614712565b92506121e88161472a565b9050612198565b5050919050565b6000612201846117ef565b90506001600160a01b038116331461224a5760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606401610e82565b611e47848285858080602002602001604051908101604052809392919081815260200183836020028082843760009201829052509250612288915050565b6040519080825280602002602001820160405280156122ce57816020015b6040805180820190915260608152600060208201528152602001906001900390816122a65790505b506131df565b6122dc612fa0565b61013280546001600160a01b0319166001600160a01b0383169081179091556040519081527f86907b53cf2024579968511876daf0b4620d65803b550e33101baf70aeb6f5eb90602001611761565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b612361612fa0565b6001600160a01b0381166123c65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610e82565b61157481612ffa565b600082815261013460205260408120805482919082906123f1576123f16146e6565b600091825260208083209091015480835261012e8252604080842060030154610132548251630505792b60e51b815292519396509094936001600160a01b039091169263a0af25609260048082019392918290030181865afa15801561245b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061247f9190614b71565b6001600160a01b03166315bbf074836040518263ffffffff1660e01b81526004016124ac91815260200190565b600060405180830381865afa1580156124c9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124f19190810190614bea565b6101608101518051919250906000036125225750604080518082019091526005815264766572726160d81b60208201525b60005b865181101561257f5761255a878281518110612543576125436146e6565b60200260200101518361343690919063ffffffff16565b1561256d57600195505050505050610d4f565b806125778161472a565b915050612525565b506000979650505050505050565b600054610100900460ff16158080156125ad5750600054600160ff909116105b806125c75750303b1580156125c7575060005460ff166001145b61262a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610e82565b6000805460ff19166001179055801561264d576000805461ff0019166101001790555b61265561345a565b61269a604051806080016040528060458152602001614ef5604591396040518060400160405280600b81526020016a1513d550d0538b50d1549560aa1b815250613481565b6126a26134cf565b6126aa6134ff565b6126b261345a565b61013280546001600160a01b0319166001600160a01b03851617905581516126e290610131906020850190613b74565b508015610f23576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60008181526101346020908152604080832080548251818502810185019093528083528493849392919083018282801561278657602002820191906000526020600020905b815481526020019060010190808311612772575b5050505050905060005b81518110156127e75761012e60008383815181106127b0576127b06146e6565b6020026020010151815260200190815260200160002060020154836127d59190614712565b92506127e08161472a565b9050612790565b50610ff4670de0b6b3a764000083614743565b612802612fa0565b610135548181036128435760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401610e82565b61013582905560408051828152602081018490527f551d481ccb1906e06e26b2f8bedf0b21755e092f001c4465f99aab9c67d8a039910160405180910390a15050565b6000818152606760205260409020546001600160a01b03166115745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610e82565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061291a826117ef565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600261013654036129a65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610e82565b600261013655565b60006001600160a01b038516331480612a35575061013254604051633a37b16d60e11b81523360048201526001600160a01b039091169063746f62da90602401602060405180830381865afa158015612a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2f9190614a03565b15156001145b612a725760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b6044820152606401610e82565b60608401516001600160a01b0316158015612a905750608084015151155b15612aaf576001600160a01b0385166060850152604084015160808501525b610133805460010190819055612ac7818786866131df565b60008181526101346020908152604090912042600182015560608701516003820180546001600160a01b0319166001600160a01b0390921691909117905560808701518051612b20936005909301929190910190613b74565b50600081815261013460209081526040918290206002810180546001600160a01b0319166001600160a01b038b16179055918701518051612b6993600401929190910190613b74565b5060a08501516000828152610134602090815260409091208251612b969360069092019290910190613b74565b5060c08501516000828152610134602090815260409091208251612bc39360079092019290910190613b74565b5060e08501516000828152610134602090815260409091208251612bf09360089092019290910190613b74565b50610100850151600082815261013460209081526040918290206009810193909355610120880151600a90930192909255518281527f54b249c3cd4a5f80e81d2ad036b251d58d8f5482a926f25d12eabec192cf1ecd910160405180910390a1612c5a8682613526565b95945050505050565b600161013655565b600080612c77836117ef565b9050806001600160a01b0316846001600160a01b03161480612c9e5750612c9e818561232b565b80610ff45750836001600160a01b0316612cb784610de7565b6001600160a01b031614949350505050565b826001600160a01b0316612cdc826117ef565b6001600160a01b031614612d025760405162461bcd60e51b8152600401610e8290614d74565b6001600160a01b038216612d645760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610e82565b826001600160a01b0316612d77826117ef565b6001600160a01b031614612d9d5760405162461bcd60e51b8152600401610e8290614d74565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611574612fa0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612e6857610f2383613540565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612ec2575060408051601f3d908101601f19168201909252612ebf91810190614db9565b60015b612f255760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610e82565b600080516020614f3a8339815191528114612f945760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610e82565b50610f238383836135dc565b6097546001600160a01b03163314611df95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610e82565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036130ad5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610e82565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b613125848484612cc9565b61313184848484613601565b611e475760405162461bcd60e51b8152600401610e8290614dd2565b6060600061315a836136ff565b60010190506000816001600160401b0381111561317957613179614245565b6040519080825280601f01601f1916602001820160405280156131a3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846131ad57509392505050565b81516000036132245760405162461bcd60e51b8152602060048201526011602482015270456d707479206576656e7420617272617960781b6044820152606401610e82565b60005b8251811015613361576000838281518110613244576132446146e6565b602090810291909101810151600081815261012e9092526040909120600101549091506001600160a01b038681169116146132c15760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206576656e7420746f20626520636c61696d656400000000006044820152606401610e82565b600081815261012f602052604090205460ff16156133195760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e4818db185a5b595908195d995b9d605a1b6044820152606401610e82565b600081815261012f60209081526040808320805460ff1916600190811790915589845261013483529083208054918201815583529120015561335a8161472a565b9050613227565b508051156133f75760005b81518110156133f5576101346000868152602001908152602001600020600b0182828151811061339e5761339e6146e6565b6020908102919091018101518254600181018455600093845292829020815180519294600202909101926133d792849290910190613b74565b50602082015181600101555050806133ee9061472a565b905061336c565b505b7fc5872b1b6098a26efa71189456aa230cff448e7d6fbfa3b42d7eb105d541d4318483604051613428929190614e24565b60405180910390a150505050565b600061345383838051602091820120825192909101919091201490565b9392505050565b600054610100900460ff16611df95760405162461bcd60e51b8152600401610e8290614e3d565b600054610100900460ff166134a85760405162461bcd60e51b8152600401610e8290614e3d565b81516134bb906065906020850190613b74565b508051610f23906066906020840190613b74565b600054610100900460ff166134f65760405162461bcd60e51b8152600401610e8290614e3d565b611df933612ffa565b600054610100900460ff16612c635760405162461bcd60e51b8152600401610e8290614e3d565b61165e8282604051806020016040528060008152506137d7565b6001600160a01b0381163b6135ad5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610e82565b600080516020614f3a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6135e58361380a565b6000825111806135f25750805b15610f2357611e47838361384a565b60006001600160a01b0384163b156136f757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613645903390899088908890600401614e88565b6020604051808303816000875af1925050508015613680575060408051601f3d908101601f1916820190925261367d91810190614ebb565b60015b6136dd573d8080156136ae576040519150601f19603f3d011682016040523d82523d6000602084013e6136b3565b606091505b5080516000036136d55760405162461bcd60e51b8152600401610e8290614dd2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ff4565b506001610ff4565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061373e5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061376a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061378857662386f26fc10000830492506010015b6305f5e10083106137a0576305f5e100830492506008015b61271083106137b457612710830492506004015b606483106137c6576064830492506002015b600a8310610d4f5760010192915050565b6137e1838361386f565b6137ee6000848484613601565b610f235760405162461bcd60e51b8152600401610e8290614dd2565b61381381613540565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606134538383604051806060016040528060278152602001614f5a602791396139fa565b6001600160a01b0382166138c55760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610e82565b6000818152606760205260409020546001600160a01b03161561392a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610e82565b6000818152606760205260409020546001600160a01b03161561398f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610e82565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060600080856001600160a01b031685604051613a179190614ed8565b600060405180830381855af49150503d8060008114613a52576040519150601f19603f3d011682016040523d82523d6000602084013e613a57565b606091505b50915091506112cd8683838760608315613ad2578251600003613acb576001600160a01b0385163b613acb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e82565b5081610ff4565b610ff48383815115613ae75781518083602001fd5b8060405162461bcd60e51b8152600401610e829190613ef3565b604051806101800160405280606081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001606081526020016000815260200160008152602001606081525090565b828054613b80906146ac565b90600052602060002090601f016020900481019282613ba25760008555613be8565b82601f10613bbb57805160ff1916838001178555613be8565b82800160010185558215613be8579182015b82811115613be8578251825591602001919060010190613bcd565b50613bf4929150613c6c565b5090565b828054613c04906146ac565b90600052602060002090601f016020900481019282613c265760008555613be8565b82601f10613c3f5782800160ff19823516178555613be8565b82800160010185558215613be8579182015b82811115613be8578235825591602001919060010190613c51565b5b80821115613bf45760008155600101613c6d565b600060208284031215613c9357600080fd5b5035919050565b600081518084526020808501945080840160005b83811015613cca57815187529582019590820190600101613cae565b509495945050505050565b60005b83811015613cf0578181015183820152602001613cd8565b83811115611e475750506000910152565b60008151808452613d19816020860160208601613cd5565b601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015613d8e57601f19868403018952815160408151818652613d7082870182613d01565b92870151958701959095525098840198925090830190600101613d4a565b5090979650505050505050565b6020815260008251610180806020850152613dba6101a0850183613c9a565b9150602085015160408501526040850151613de060608601826001600160a01b03169052565b5060608501516001600160a01b0381166080860152506080850151601f19808685030160a0870152613e128483613d01565b935060a08701519150808685030160c0870152613e2f8483613d01565b935060c08701519150808685030160e0870152613e4c8483613d01565b935060e08701519150610100818786030181880152613e6b8584613d01565b945080880151925050610120818786030181880152613e8a8584613d01565b90880151610140888101919091528801516101608089019190915288015187820390920184880152935090506112cd8382613d2d565b6001600160e01b03198116811461157457600080fd5b600060208284031215613ee857600080fd5b813561345381613ec0565b6020815260006134536020830184613d01565b6001600160a01b038116811461157457600080fd5b8035613f2681613f06565b919050565b60008060408385031215613f3e57600080fd5b8235613f4981613f06565b946020939093013593505050565b60008083601f840112613f6957600080fd5b5081356001600160401b03811115613f8057600080fd5b602083019150836020828501011115613f9857600080fd5b9250929050565b60008083601f840112613fb157600080fd5b5081356001600160401b03811115613fc857600080fd5b6020830191508360208260051b8501011115613f9857600080fd5b60008060008060008060008060008060c08b8d03121561400257600080fd5b61400b8b613f1b565b995060208b01356001600160401b038082111561402757600080fd5b6140338e838f01613f57565b909b50995089915061404760408e01613f1b565b985060608d013591508082111561405d57600080fd5b6140698e838f01613f57565b909850965060808d013591508082111561408257600080fd5b61408e8e838f01613f57565b909650945060a08d01359150808211156140a757600080fd5b506140b48d828e01613f9f565b915080935050809150509295989b9194979a5092959850565b6000602082840312156140df57600080fd5b813561345381613f06565b6020815260006134536020830184613c9a565b6000806000806000806080878903121561411657600080fd5b863561412181613f06565b955060208701356001600160401b038082111561413d57600080fd5b90880190610140828b03121561415257600080fd5b9095506040880135908082111561416857600080fd5b6141748a838b01613f9f565b9096509450606089013591508082111561418d57600080fd5b5061419a89828a01613f9f565b979a9699509497509295939492505050565b6000806000606084860312156141c157600080fd5b83356141cc81613f06565b925060208401356141dc81613f06565b929592945050506040919091013590565b801515811461157457600080fd5b6000806000806080858703121561421157600080fd5b843561421c81613f06565b93506020850135925060408501359150606085013561423a816141ed565b939692955090935050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b038111828210171561427e5761427e614245565b60405290565b604080519081016001600160401b038111828210171561427e5761427e614245565b60405161018081016001600160401b038111828210171561427e5761427e614245565b604051601f8201601f191681016001600160401b03811182821017156142f1576142f1614245565b604052919050565b60006001600160401b0382111561431257614312614245565b50601f01601f191660200190565b600082601f83011261433157600080fd5b813561434461433f826142f9565b6142c9565b81815284602083860101111561435957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561438957600080fd5b823561439481613f06565b915060208301356001600160401b038111156143af57600080fd5b6143bb85828601614320565b9150509250929050565b6000602082840312156143d757600080fd5b81356001600160401b038111156143ed57600080fd5b610ff484828501614320565b6000806040838503121561440c57600080fd5b823561441781613f06565b91506020830135614427816141ed565b809150509250929050565b6000806000806080858703121561444857600080fd5b843561445381613f06565b9350602085013561446381613f06565b92506040850135915060608501356001600160401b0381111561448557600080fd5b61449187828801614320565b91505092959194509250565b60008060008060008060008060a0898b0312156144b957600080fd5b8835975060208901356001600160401b03808211156144d757600080fd5b6144e38c838d01613f57565b909950975060408b013591506144f882613f06565b90955060608a0135908082111561450e57600080fd5b61451a8c838d01613f57565b909650945060808b013591508082111561453357600080fd5b506145408b828c01613f57565b999c989b5096995094979396929594505050565b60008060006040848603121561456957600080fd5b8335925060208401356001600160401b0381111561458657600080fd5b61459286828701613f9f565b9497909650939450505050565b600080604083850312156145b257600080fd5b82356145bd81613f06565b9150602083013561442781613f06565b60006001600160401b038211156145e6576145e6614245565b5060051b60200190565b6000806040838503121561460357600080fd5b823591506020808401356001600160401b038082111561462257600080fd5b818601915086601f83011261463657600080fd5b813561464461433f826145cd565b81815260059190911b8301840190848101908983111561466357600080fd5b8585015b8381101561469b5780358581111561467f5760008081fd5b61468d8c89838a0101614320565b845250918601918601614667565b508096505050505050509250929050565b600181811c908216806146c057607f821691505b6020821081036146e057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614725576147256146fc565b500190565b60006001820161473c5761473c6146fc565b5060010190565b60008261476057634e487b7160e01b600052601260045260246000fd5b500490565b600082601f83011261477657600080fd5b8135602061478661433f836145cd565b82815260059290921b840181019181810190868411156147a557600080fd5b8286015b848110156147c057803583529183019183016147a9565b509695505050505050565b600061014082360312156147de57600080fd5b6147e661425b565b82356001600160401b03808211156147fd57600080fd5b61480936838701614765565b835260208501356020840152604085013591508082111561482957600080fd5b61483536838701614320565b604084015261484660608601613f1b565b6060840152608085013591508082111561485f57600080fd5b61486b36838701614320565b608084015260a085013591508082111561488457600080fd5b61489036838701614320565b60a084015260c08501359150808211156148a957600080fd5b6148b536838701614320565b60c084015260e08501359150808211156148ce57600080fd5b506148db36828601614320565b60e083015250610100838101359082015261012092830135928101929092525090565b600061490c61433f846145cd565b80848252602080830192508560051b85013681111561492a57600080fd5b855b8181101561499f5780356001600160401b038082111561494c5760008081fd5b8189019150604082360312156149625760008081fd5b61496a614284565b82358281111561497a5760008081fd5b61498636828601614320565b825250918501358583015250855293820193820161492c565b50919695505050505050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b8051613f26816141ed565b600060208284031215614a1557600080fd5b8151613453816141ed565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008151614aca818560208601613cd5565b9290920192915050565b600080845481600182811c915080831680614af057607f831692505b60208084108203614b0f57634e487b7160e01b86526022600452602486fd5b818015614b235760018114614b3457614b61565b60ff19861689528489019650614b61565b60008b81526020902060005b86811015614b595781548b820152908501908301614b40565b505084890196505b505050505050612c5a8185614ab8565b600060208284031215614b8357600080fd5b815161345381613f06565b600082601f830112614b9f57600080fd5b8151614bad61433f826142f9565b818152846020838601011115614bc257600080fd5b610ff4826020830160208701613cd5565b80516001600160401b0381168114613f2657600080fd5b600060208284031215614bfc57600080fd5b81516001600160401b0380821115614c1357600080fd5b908301906101808286031215614c2857600080fd5b614c306142a6565b825182811115614c3f57600080fd5b614c4b87828601614b8e565b825250614c5a60208401614bd3565b6020820152614c6b60408401614bd3565b604082015260608301516060820152614c8660808401614bd3565b6080820152614c9760a084016149f8565b60a0820152614ca860c084016149f8565b60c082015260e083015182811115614cbf57600080fd5b614ccb87828601614b8e565b60e0830152506101008084015183811115614ce557600080fd5b614cf188828701614b8e565b8284015250506101208084015183811115614d0b57600080fd5b614d1788828701614b8e565b8284015250506101408084015183811115614d3157600080fd5b614d3d88828701614b8e565b8284015250506101608084015183811115614d5757600080fd5b614d6388828701614b8e565b918301919091525095945050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b600060208284031215614dcb57600080fd5b5051919050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b828152604060208201526000610ff46040830184613c9a565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112cd90830184613d01565b600060208284031215614ecd57600080fd5b815161345381613ec0565b60008251614eea818460208701613cd5565b919091019291505056fe546f7563616e2050726f746f636f6c3a205265746972656d656e742043657274696669636174657320666f7220546f6b656e697a656420436172626f6e204f666673657473360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122071091db6ab2c93f6cb947d173d81d3540e01acc1146bb112f6ab8d2e76b4c7a064736f6c634300080e0033';

type RetirementCertificatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RetirementCertificatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RetirementCertificates__factory extends ContractFactory {
  constructor(...args: RetirementCertificatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RetirementCertificates> {
    return super.deploy(overrides || {}) as Promise<RetirementCertificates>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RetirementCertificates {
    return super.attach(address) as RetirementCertificates;
  }
  override connect(signer: Signer): RetirementCertificates__factory {
    return super.connect(signer) as RetirementCertificates__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RetirementCertificatesInterface {
    return new utils.Interface(_abi) as RetirementCertificatesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RetirementCertificates {
    return new Contract(address, _abi, signerOrProvider) as RetirementCertificates;
  }
}
