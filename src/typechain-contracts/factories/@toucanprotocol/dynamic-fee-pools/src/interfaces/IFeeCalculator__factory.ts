/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IFeeCalculator,
  IFeeCalculatorInterface,
} from '../../../../../@toucanprotocol/dynamic-fee-pools/src/interfaces/IFeeCalculator';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'tco2',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateDepositFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'erc1155',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateDepositFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'erc1155s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'redemptionAmounts',
        type: 'uint256[]',
      },
    ],
    name: 'calculateRedemptionFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'redemptionAmounts',
        type: 'uint256[]',
      },
    ],
    name: 'calculateRedemptionFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class IFeeCalculator__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeCalculatorInterface {
    return new utils.Interface(_abi) as IFeeCalculatorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IFeeCalculator {
    return new Contract(address, _abi, signerOrProvider) as IFeeCalculator;
  }
}
