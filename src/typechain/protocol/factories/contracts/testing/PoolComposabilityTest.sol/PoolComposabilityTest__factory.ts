/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  PoolComposabilityTest,
  PoolComposabilityTestInterface,
} from '../../../../contracts/testing/PoolComposabilityTest.sol/PoolComposabilityTest';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'poolToken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'retirementCertificates',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: '_poolToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_retirementCertificates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'onERC721Received',
    outputs: [
      {
        internalType: 'bytes4',
        name: '',
        type: 'bytes4',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_totalAmount',
        type: 'uint256',
      },
    ],
    name: 'testRedeemAuto',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_totalAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expectedLength',
        type: 'uint256',
      },
    ],
    name: 'testRedeemAuto2',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'testRedeemManyArgs',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'testRedeemRetireAndMintCertificate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'testRedeemRetireAndMintCertificateN',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b5060405161156a38038061156a83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516114566101146000396000818161015c01528181610339015281816103ef01528181610a770152610b1801526000818160f7015281816101d3015281816102b001528181610475015281816104fd0152818161068d015281816108950152818161097201528181610b9b0152610c3801526114566000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d8f654d41161005b578063d8f654d414610131578063f52e83ab14610144578063fc81e5f914610157578063fe0d51fe1461017e57600080fd5b8063103410361461008d578063150b7a02146100a257806335708b5e146100df578063a38e9764146100f2575b600080fd5b6100a061009b366004610e1b565b610191565b005b6100c16100b0366004610e9f565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100a06100ed366004610e1b565b61045b565b6101197f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d6565b6100a061013f366004610f3e565b61066a565b6100a0610152366004610e1b565b610853565b6101197f000000000000000000000000000000000000000000000000000000000000000081565b6100a061018c366004610f60565b610b97565b60005b83811015610295578484828181106101ae576101ae610f79565b90506020020160208101906101c39190610f8f565b6001600160a01b031663095ea7b37f000000000000000000000000000000000000000000000000000000000000000085858581811061020457610204610f79565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c9190610fb3565b61028557600080fd5b61028e81610feb565b9050610194565b506040516366b992fb60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cd7325f6906102eb908890889088908890600401611004565b6000604051808303816000875af115801561030a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610332919081019061115e565b50905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663163c13193033856040518463ffffffff1660e01b8152600401610387939291906111fd565b6020604051808303816000875af11580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca91906112a2565b604051632142170760e11b8152306004820152336024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342842e0e90606401600060405180830381600087803b15801561043b57600080fd5b505af115801561044f573d6000803e3d6000fd5b50505050505050505050565b6040516315aaa0a160e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632b554142906104b0908890889088908890600401611004565b6000604051808303816000875af11580156104cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104f791908101906112bb565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663dff0f5236040518163ffffffff1660e01b8152600401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906112a2565b905060005b8251811015610661576000612710838787858181106105a3576105a3610f79565b905060200201356105b491906112f8565b6105be9190611317565b8686848181106105d0576105d0610f79565b905060200201356105e19190611339565b9050808483815181106105f6576105f6610f79565b6020026020010151146106505760405162461bcd60e51b815260206004820152601a60248201527f556e65787065637465642072656465656d656420616d6f756e7400000000000060448201526064015b60405180910390fd5b5061065a81610feb565b9050610582565b50505050505050565b604051634c02cad160e01b81526004810183905260009081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634c02cad1906024016000604051808303816000875af11580156106d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106fe91908101906113b4565b915091508282511461074b5760405162461bcd60e51b81526020600482015260166024820152750aadccaf0e0cac6e8cac840e8c6de6440d8cadccee8d60531b6044820152606401610647565b8281511461079b5760405162461bcd60e51b815260206004820152601960248201527f556e657870656374656420616d6f756e7473206c656e677468000000000000006044820152606401610647565b60005b825181101561084c578281815181106107b9576107b9610f79565b60200260200101516001600160a01b0316633790cf578383815181106107e1576107e1610f79565b60200260200101516040518263ffffffff1660e01b815260040161080791815260200190565b600060405180830381600087803b15801561082157600080fd5b505af1158015610835573d6000803e3d6000fd5b50505050808061084490610feb565b91505061079e565b5050505050565b60005b838110156109575784848281811061087057610870610f79565b90506020020160208101906108859190610f8f565b6001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000008585858181106108c6576108c6610f79565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af115801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e9190610fb3565b61094757600080fd5b61095081610feb565b9050610856565b506040516366b992fb60e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cd7325f6906109ad908890889088908890600401611004565b6000604051808303816000875af11580156109cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f4919081019061115e565b50905060005b8151811015610b8f5760408051600180825281830190925260009160208083019080368337019050509050828281518110610a3757610a37610f79565b602002602001015181600081518110610a5257610a52610f79565b602090810291909101015260405163163c131960e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063163c131990610ab0903090339087906004016111fd565b6020604051808303816000875af1158015610acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af391906112a2565b604051632142170760e11b8152306004820152336024820152604481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906342842e0e90606401600060405180830381600087803b158015610b6457600080fd5b505af1158015610b78573d6000803e3d6000fd5b50505050505080610b8890610feb565b90506109fa565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bf2f870f6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610bf7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c1f91908101906113eb565b6040516320b167f960e01b8152600481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906320b167f990602401600060405180830381600087803b158015610c8457600080fd5b505af1158015610c98573d6000803e3d6000fd5b5050505060005b8215610dca576000828281518110610cb957610cb9610f79565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d91906112a2565b9050828281518110610d4157610d41610f79565b60200260200101516001600160a01b0316633790cf57826040518263ffffffff1660e01b8152600401610d7691815260200190565b600060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050508084610db49190611339565b9350508080610dc290610feb565b915050610c9f565b505050565b60008083601f840112610de157600080fd5b50813567ffffffffffffffff811115610df957600080fd5b6020830191508360208260051b8501011115610e1457600080fd5b9250929050565b60008060008060408587031215610e3157600080fd5b843567ffffffffffffffff80821115610e4957600080fd5b610e5588838901610dcf565b90965094506020870135915080821115610e6e57600080fd5b50610e7b87828801610dcf565b95989497509550505050565b6001600160a01b0381168114610e9c57600080fd5b50565b600080600080600060808688031215610eb757600080fd5b8535610ec281610e87565b94506020860135610ed281610e87565b935060408601359250606086013567ffffffffffffffff80821115610ef657600080fd5b818801915088601f830112610f0a57600080fd5b813581811115610f1957600080fd5b896020828501011115610f2b57600080fd5b9699959850939650602001949392505050565b60008060408385031215610f5157600080fd5b50508035926020909101359150565b600060208284031215610f7257600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610fa157600080fd5b8135610fac81610e87565b9392505050565b600060208284031215610fc557600080fd5b81518015158114610fac57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ffd57610ffd610fd5565b5060010190565b6040808252810184905260008560608301825b8781101561104757823561102a81610e87565b6001600160a01b0316825260209283019290910190600101611017565b5083810360208501528481526001600160fb1b0385111561106757600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110c7576110c7611088565b604052919050565b600067ffffffffffffffff8211156110e9576110e9611088565b5060051b60200190565b600082601f83011261110457600080fd5b81516020611119611114836110cf565b61109e565b82815260059290921b8401810191818101908684111561113857600080fd5b8286015b84811015611153578051835291830191830161113c565b509695505050505050565b6000806040838503121561117157600080fd5b825167ffffffffffffffff8082111561118957600080fd5b611195868387016110f3565b935060208501519150808211156111ab57600080fd5b506111b8858286016110f3565b9150509250929050565b600081518084526020808501945080840160005b838110156111f2578151875295820195908201906001016111d6565b509495945050505050565b6001600160a01b03848116825260c0602083018190526010908301526f15195cdd1a5b99c810dbdb9d1c9858dd60821b60e08301528316604082015261010060608201819052600690820152652a32b9ba32b960d11b61012082015261014060808201819052600c908201526b4a7573742074657374696e6760a01b61016082015261018060a08201819052600090611298818401856111c2565b9695505050505050565b6000602082840312156112b457600080fd5b5051919050565b6000602082840312156112cd57600080fd5b815167ffffffffffffffff8111156112e457600080fd5b6112f0848285016110f3565b949350505050565b600081600019048311821515161561131257611312610fd5565b500290565b60008261133457634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561134b5761134b610fd5565b500390565b600082601f83011261136157600080fd5b81516020611371611114836110cf565b82815260059290921b8401810191818101908684111561139057600080fd5b8286015b848110156111535780516113a781610e87565b8352918301918301611394565b600080604083850312156113c757600080fd5b825167ffffffffffffffff808211156113df57600080fd5b61119586838701611350565b6000602082840312156113fd57600080fd5b815167ffffffffffffffff81111561141457600080fd5b6112f08482850161135056fea2646970667358221220b307d829be9ee2904ee81ed5f8376cf7d087a6ccca707cb3669ccfbba209be3f64736f6c634300080e0033';

type PoolComposabilityTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolComposabilityTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolComposabilityTest__factory extends ContractFactory {
  constructor(...args: PoolComposabilityTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    poolToken: PromiseOrValue<string>,
    retirementCertificates: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolComposabilityTest> {
    return super.deploy(
      poolToken,
      retirementCertificates,
      overrides || {}
    ) as Promise<PoolComposabilityTest>;
  }
  override getDeployTransaction(
    poolToken: PromiseOrValue<string>,
    retirementCertificates: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(poolToken, retirementCertificates, overrides || {});
  }
  override attach(address: string): PoolComposabilityTest {
    return super.attach(address) as PoolComposabilityTest;
  }
  override connect(signer: Signer): PoolComposabilityTest__factory {
    return super.connect(signer) as PoolComposabilityTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolComposabilityTestInterface {
    return new utils.Interface(_abi) as PoolComposabilityTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PoolComposabilityTest {
    return new Contract(address, _abi, signerOrProvider) as PoolComposabilityTest;
  }
}
