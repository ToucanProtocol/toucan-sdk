/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../../common';
import type {
  FxGenArt721Test,
  FxGenArt721TestInterface,
} from '../../../../contracts/testing/FXGenArt721Test.sol/FxGenArt721Test';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint96',
        name: '',
        type: 'uint96',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b50604080518082018252600b81526a467847656e41727437323160a81b60208083019182528351808501909452600684526508cb09082a6960d31b908401528151919291620000639160009162000082565b5080516200007990600190602084019062000082565b50505062000164565b828054620000909062000128565b90600052602060002090601f016020900481019282620000b45760008555620000ff565b82601f10620000cf57805160ff1916838001178555620000ff565b82800160010185558215620000ff579182015b82811115620000ff578251825591602001919060010190620000e2565b506200010d92915062000111565b5090565b5b808211156200010d576000815560010162000112565b600181811c908216806200013d57607f821691505b6020821081036200015e57634e487b7160e01b600052602260045260246000fd5b50919050565b6113ac80620001746000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610217578063b88d4fde1461022a578063c87b56dd1461023d578063e985e9c51461025057600080fd5b806342842e0e146101c85780636352211e146101db57806370a08231146101ee57806395d89b411461020f57600080fd5b8063095ea7b3116100d3578063095ea7b314610162578063156e29f61461017757806318160ddd1461018a57806323b872dd146101b557600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610e9b565b61028c565b60405190151581526020015b60405180910390f35b61012a6102de565b6040516101199190610f17565b61014a610145366004610f2a565b610370565b6040516001600160a01b039091168152602001610119565b610175610170366004610f5f565b610397565b005b610175610185366004610f89565b6104b1565b60065461019d906001600160601b031681565b6040516001600160601b039091168152602001610119565b6101756101c3366004610fbc565b610521565b6101756101d6366004610fbc565b610552565b61014a6101e9366004610f2a565b61056d565b6102016101fc366004610ff8565b6105cd565b604051908152602001610119565b61012a610653565b610175610225366004611013565b610662565b610175610238366004611065565b610671565b61012a61024b366004610f2a565b6106a9565b61010d61025e366004611141565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102bd57506001600160e01b03198216635b5e139f60e01b145b806102d857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ed90611174565b80601f016020809104026020016040519081016040528092919081815260200182805461031990611174565b80156103665780601f1061033b57610100808354040283529160200191610366565b820191906000526020600020905b81548152906001019060200180831161034957829003601f168201915b5050505050905090565b600061037b826106da565b506000908152600460205260409020546001600160a01b031690565b60006103a28261056d565b9050806001600160a01b0316836001600160a01b0316036104145760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104305750610430813361025e565b6104a25760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161040b565b6104ac838361073c565b505050565b6006546001600160601b031660005b838110156104f6576104e6856104d5846111c4565b9350836001600160601b03166107aa565b6104ef816111ea565b90506104c0565b50600680546bffffffffffffffffffffffff19166001600160601b0392909216919091179055505050565b61052b3382610935565b6105475760405162461bcd60e51b815260040161040b90611203565b6104ac8383836109b4565b6104ac83838360405180602001604052806000815250610671565b6000818152600260205260408120546001600160a01b0316806102d85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040b565b60006001600160a01b0382166106375760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161040b565b506001600160a01b031660009081526003602052604090205490565b6060600180546102ed90611174565b61066d338383610b18565b5050565b61067b3383610935565b6106975760405162461bcd60e51b815260040161040b90611203565b6106a384848484610be6565b50505050565b60606106b482610c19565b6040516020016106c49190611250565b6040516020818303038152906040529050919050565b6000818152600260205260409020546001600160a01b03166107395760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161040b565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107718261056d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166108005760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161040b565b6000818152600260205260409020546001600160a01b0316156108655760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040b565b6000818152600260205260409020546001600160a01b0316156108ca5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161040b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000806109418361056d565b9050806001600160a01b0316846001600160a01b0316148061098857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109ac5750836001600160a01b03166109a184610370565b6001600160a01b0316145b949350505050565b826001600160a01b03166109c78261056d565b6001600160a01b0316146109ed5760405162461bcd60e51b815260040161040b90611285565b6001600160a01b038216610a4f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161040b565b826001600160a01b0316610a628261056d565b6001600160a01b031614610a885760405162461bcd60e51b815260040161040b90611285565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b795760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161040b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610bf18484846109b4565b610bfd84848484610cac565b6106a35760405162461bcd60e51b815260040161040b906112ca565b60606000610c2683610dad565b600101905060008167ffffffffffffffff811115610c4657610c4661104f565b6040519080825280601f01601f191660200182016040528015610c70576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c7a57509392505050565b60006001600160a01b0384163b15610da257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610cf090339089908890889060040161131c565b6020604051808303816000875af1925050508015610d2b575060408051601f3d908101601f19168201909252610d2891810190611359565b60015b610d88573d808015610d59576040519150601f19603f3d011682016040523d82523d6000602084013e610d5e565b606091505b508051600003610d805760405162461bcd60e51b815260040161040b906112ca565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109ac565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dec5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e18576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e3657662386f26fc10000830492506010015b6305f5e1008310610e4e576305f5e100830492506008015b6127108310610e6257612710830492506004015b60648310610e74576064830492506002015b600a83106102d85760010192915050565b6001600160e01b03198116811461073957600080fd5b600060208284031215610ead57600080fd5b8135610eb881610e85565b9392505050565b60005b83811015610eda578181015183820152602001610ec2565b838111156106a35750506000910152565b60008151808452610f03816020860160208601610ebf565b601f01601f19169290920160200192915050565b602081526000610eb86020830184610eeb565b600060208284031215610f3c57600080fd5b5035919050565b80356001600160a01b0381168114610f5a57600080fd5b919050565b60008060408385031215610f7257600080fd5b610f7b83610f43565b946020939093013593505050565b600080600060608486031215610f9e57600080fd5b610fa784610f43565b95602085013595506040909401359392505050565b600080600060608486031215610fd157600080fd5b610fda84610f43565b9250610fe860208501610f43565b9150604084013590509250925092565b60006020828403121561100a57600080fd5b610eb882610f43565b6000806040838503121561102657600080fd5b61102f83610f43565b91506020830135801515811461104457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561107b57600080fd5b61108485610f43565b935061109260208601610f43565b925060408501359150606085013567ffffffffffffffff808211156110b657600080fd5b818701915087601f8301126110ca57600080fd5b8135818111156110dc576110dc61104f565b604051601f8201601f19908116603f011681019083821181831017156111045761110461104f565b816040528281528a602084870101111561111d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561115457600080fd5b61115d83610f43565b915061116b60208401610f43565b90509250929050565b600181811c9082168061118857607f821691505b6020821081036111a857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b038083168181036111e0576111e06111ae565b6001019392505050565b6000600182016111fc576111fc6111ae565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6c68747470733a2f2f746573742f60981b81526000825161127881600d850160208701610ebf565b91909101600d0192915050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061134f90830184610eeb565b9695505050505050565b60006020828403121561136b57600080fd5b8151610eb881610e8556fea26469706673582212209ab9fa20fafc5bea0f4fa99be000af44ce10697d50e7307405a0d65272c000ed64736f6c634300080e0033';

type FxGenArt721TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FxGenArt721TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FxGenArt721Test__factory extends ContractFactory {
  constructor(...args: FxGenArt721TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FxGenArt721Test> {
    return super.deploy(overrides || {}) as Promise<FxGenArt721Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FxGenArt721Test {
    return super.attach(address) as FxGenArt721Test;
  }
  override connect(signer: Signer): FxGenArt721Test__factory {
    return super.connect(signer) as FxGenArt721Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxGenArt721TestInterface {
    return new utils.Interface(_abi) as FxGenArt721TestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FxGenArt721Test {
    return new Contract(address, _abi, signerOrProvider) as FxGenArt721Test;
  }
}
