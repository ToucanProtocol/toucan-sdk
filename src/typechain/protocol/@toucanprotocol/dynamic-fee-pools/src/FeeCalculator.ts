/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from '../../../common';

export type FeeDistributionStruct = {
  recipients: PromiseOrValue<string>[];
  shares: PromiseOrValue<BigNumberish>[];
};

export type FeeDistributionStructOutput = [string[], BigNumber[]] & {
  recipients: string[];
  shares: BigNumber[];
};

export interface FeeCalculatorInterface extends utils.Interface {
  functions: {
    'VERSION()': FunctionFragment;
    'VERSION_RELEASE_CANDIDATE()': FunctionFragment;
    'calculateDepositFees(address,address,uint256)': FunctionFragment;
    'calculateDepositFees(address,address,uint256,uint256)': FunctionFragment;
    'calculateRedemptionFees(address,address[],uint256[],uint256[])': FunctionFragment;
    'calculateRedemptionFees(address,address[],uint256[])': FunctionFragment;
    'depositFeeRatioScale()': FunctionFragment;
    'depositFeeScale()': FunctionFragment;
    'dustAssetRedemptionRelativeFee()': FunctionFragment;
    'feeSetup(address[],uint256[])': FunctionFragment;
    'getFeeSetup()': FunctionFragment;
    'owner()': FunctionFragment;
    'redemptionFeeConstant()': FunctionFragment;
    'redemptionFeeScale()': FunctionFragment;
    'redemptionFeeShift()': FunctionFragment;
    'renounceOwnership()': FunctionFragment;
    'setDepositFeeRatioScale(int256)': FunctionFragment;
    'setDepositFeeScale(int256)': FunctionFragment;
    'setDustAssetRedemptionRelativeFee(int256)': FunctionFragment;
    'setRedemptionFeeScale(int256)': FunctionFragment;
    'setRedemptionFeeShift(int256)': FunctionFragment;
    'setSingleAssetDepositRelativeFee(int256)': FunctionFragment;
    'setSingleAssetRedemptionRelativeFee(int256)': FunctionFragment;
    'singleAssetDepositRelativeFee()': FunctionFragment;
    'singleAssetRedemptionRelativeFee()': FunctionFragment;
    'transferOwnership(address)': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'VERSION'
      | 'VERSION_RELEASE_CANDIDATE'
      | 'calculateDepositFees(address,address,uint256)'
      | 'calculateDepositFees(address,address,uint256,uint256)'
      | 'calculateRedemptionFees(address,address[],uint256[],uint256[])'
      | 'calculateRedemptionFees(address,address[],uint256[])'
      | 'depositFeeRatioScale'
      | 'depositFeeScale'
      | 'dustAssetRedemptionRelativeFee'
      | 'feeSetup'
      | 'getFeeSetup'
      | 'owner'
      | 'redemptionFeeConstant'
      | 'redemptionFeeScale'
      | 'redemptionFeeShift'
      | 'renounceOwnership'
      | 'setDepositFeeRatioScale'
      | 'setDepositFeeScale'
      | 'setDustAssetRedemptionRelativeFee'
      | 'setRedemptionFeeScale'
      | 'setRedemptionFeeShift'
      | 'setSingleAssetDepositRelativeFee'
      | 'setSingleAssetRedemptionRelativeFee'
      | 'singleAssetDepositRelativeFee'
      | 'singleAssetRedemptionRelativeFee'
      | 'transferOwnership'
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'VERSION', values?: undefined): string;
  encodeFunctionData(functionFragment: 'VERSION_RELEASE_CANDIDATE', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'calculateDepositFees(address,address,uint256)',
    values: [PromiseOrValue<string>, PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'calculateDepositFees(address,address,uint256,uint256)',
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'calculateRedemptionFees(address,address[],uint256[],uint256[])',
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: 'calculateRedemptionFees(address,address[],uint256[])',
    values: [PromiseOrValue<string>, PromiseOrValue<string>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(functionFragment: 'depositFeeRatioScale', values?: undefined): string;
  encodeFunctionData(functionFragment: 'depositFeeScale', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'dustAssetRedemptionRelativeFee',
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: 'feeSetup',
    values: [PromiseOrValue<string>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(functionFragment: 'getFeeSetup', values?: undefined): string;
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
  encodeFunctionData(functionFragment: 'redemptionFeeConstant', values?: undefined): string;
  encodeFunctionData(functionFragment: 'redemptionFeeScale', values?: undefined): string;
  encodeFunctionData(functionFragment: 'redemptionFeeShift', values?: undefined): string;
  encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'setDepositFeeRatioScale',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setDepositFeeScale',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setDustAssetRedemptionRelativeFee',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setRedemptionFeeScale',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setRedemptionFeeShift',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setSingleAssetDepositRelativeFee',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: 'setSingleAssetRedemptionRelativeFee',
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: 'singleAssetDepositRelativeFee', values?: undefined): string;
  encodeFunctionData(
    functionFragment: 'singleAssetRedemptionRelativeFee',
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(functionFragment: 'VERSION', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'VERSION_RELEASE_CANDIDATE', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'calculateDepositFees(address,address,uint256)',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'calculateDepositFees(address,address,uint256,uint256)',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'calculateRedemptionFees(address,address[],uint256[],uint256[])',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'calculateRedemptionFees(address,address[],uint256[])',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'depositFeeRatioScale', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'depositFeeScale', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'dustAssetRedemptionRelativeFee', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'feeSetup', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'getFeeSetup', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'redemptionFeeConstant', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'redemptionFeeScale', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'redemptionFeeShift', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setDepositFeeRatioScale', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setDepositFeeScale', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'setDustAssetRedemptionRelativeFee',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'setRedemptionFeeScale', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'setRedemptionFeeShift', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'setSingleAssetDepositRelativeFee',
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: 'setSingleAssetRedemptionRelativeFee',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'singleAssetDepositRelativeFee', data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: 'singleAssetRedemptionRelativeFee',
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result;

  events: {
    'DepositFeeRatioUpdated(int256)': EventFragment;
    'DepositFeeScaleUpdated(int256)': EventFragment;
    'DustAssetRedemptionRelativeFeeUpdated(int256)': EventFragment;
    'FeeSetup(address[],uint256[])': EventFragment;
    'OwnershipTransferred(address,address)': EventFragment;
    'RedemptionFeeScaleUpdated(int256)': EventFragment;
    'RedemptionFeeShift(int256)': EventFragment;
    'SingleAssetDepositRelativeFeeUpdated(int256)': EventFragment;
    'SingleAssetRedemptionRelativeFeeUpdated(int256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'DepositFeeRatioUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DepositFeeScaleUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'DustAssetRedemptionRelativeFeeUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'FeeSetup'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'RedemptionFeeScaleUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'RedemptionFeeShift'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'SingleAssetDepositRelativeFeeUpdated'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'SingleAssetRedemptionRelativeFeeUpdated'): EventFragment;
}

export interface DepositFeeRatioUpdatedEventObject {
  depositFeeRatioScale: BigNumber;
}
export type DepositFeeRatioUpdatedEvent = TypedEvent<
  [BigNumber],
  DepositFeeRatioUpdatedEventObject
>;

export type DepositFeeRatioUpdatedEventFilter = TypedEventFilter<DepositFeeRatioUpdatedEvent>;

export interface DepositFeeScaleUpdatedEventObject {
  depositFeeScale: BigNumber;
}
export type DepositFeeScaleUpdatedEvent = TypedEvent<
  [BigNumber],
  DepositFeeScaleUpdatedEventObject
>;

export type DepositFeeScaleUpdatedEventFilter = TypedEventFilter<DepositFeeScaleUpdatedEvent>;

export interface DustAssetRedemptionRelativeFeeUpdatedEventObject {
  dustAssetRedemptionRelativeFee: BigNumber;
}
export type DustAssetRedemptionRelativeFeeUpdatedEvent = TypedEvent<
  [BigNumber],
  DustAssetRedemptionRelativeFeeUpdatedEventObject
>;

export type DustAssetRedemptionRelativeFeeUpdatedEventFilter =
  TypedEventFilter<DustAssetRedemptionRelativeFeeUpdatedEvent>;

export interface FeeSetupEventObject {
  recipients: string[];
  shares: BigNumber[];
}
export type FeeSetupEvent = TypedEvent<[string[], BigNumber[]], FeeSetupEventObject>;

export type FeeSetupEventFilter = TypedEventFilter<FeeSetupEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>;

export interface RedemptionFeeScaleUpdatedEventObject {
  redemptionFeeScale: BigNumber;
}
export type RedemptionFeeScaleUpdatedEvent = TypedEvent<
  [BigNumber],
  RedemptionFeeScaleUpdatedEventObject
>;

export type RedemptionFeeScaleUpdatedEventFilter = TypedEventFilter<RedemptionFeeScaleUpdatedEvent>;

export interface RedemptionFeeShiftEventObject {
  redemptionFeeShift: BigNumber;
}
export type RedemptionFeeShiftEvent = TypedEvent<[BigNumber], RedemptionFeeShiftEventObject>;

export type RedemptionFeeShiftEventFilter = TypedEventFilter<RedemptionFeeShiftEvent>;

export interface SingleAssetDepositRelativeFeeUpdatedEventObject {
  singleAssetDepositRelativeFee: BigNumber;
}
export type SingleAssetDepositRelativeFeeUpdatedEvent = TypedEvent<
  [BigNumber],
  SingleAssetDepositRelativeFeeUpdatedEventObject
>;

export type SingleAssetDepositRelativeFeeUpdatedEventFilter =
  TypedEventFilter<SingleAssetDepositRelativeFeeUpdatedEvent>;

export interface SingleAssetRedemptionRelativeFeeUpdatedEventObject {
  singleAssetRedemptionRelativeFee: BigNumber;
}
export type SingleAssetRedemptionRelativeFeeUpdatedEvent = TypedEvent<
  [BigNumber],
  SingleAssetRedemptionRelativeFeeUpdatedEventObject
>;

export type SingleAssetRedemptionRelativeFeeUpdatedEventFilter =
  TypedEventFilter<SingleAssetRedemptionRelativeFeeUpdatedEvent>;

export interface FeeCalculator extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: FeeCalculatorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    VERSION(overrides?: CallOverrides): Promise<[string]>;

    VERSION_RELEASE_CANDIDATE(overrides?: CallOverrides): Promise<[BigNumber]>;

    'calculateDepositFees(address,address,uint256)'(
      pool: PromiseOrValue<string>,
      tco2: PromiseOrValue<string>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[FeeDistributionStructOutput] & { feeDistribution: FeeDistributionStructOutput }>;

    'calculateDepositFees(address,address,uint256,uint256)'(
      pool: PromiseOrValue<string>,
      erc1155: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[FeeDistributionStructOutput] & { feeDistribution: FeeDistributionStructOutput }>;

    'calculateRedemptionFees(address,address[],uint256[],uint256[])'(
      pool: PromiseOrValue<string>,
      erc1155s: PromiseOrValue<string>[],
      tokenIds: PromiseOrValue<BigNumberish>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[FeeDistributionStructOutput] & { feeDistribution: FeeDistributionStructOutput }>;

    'calculateRedemptionFees(address,address[],uint256[])'(
      pool: PromiseOrValue<string>,
      tco2s: PromiseOrValue<string>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[FeeDistributionStructOutput] & { feeDistribution: FeeDistributionStructOutput }>;

    depositFeeRatioScale(overrides?: CallOverrides): Promise<[BigNumber]>;

    depositFeeScale(overrides?: CallOverrides): Promise<[BigNumber]>;

    dustAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    feeSetup(
      recipients: PromiseOrValue<string>[],
      shares: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getFeeSetup(
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[]] & { recipients: string[]; shares: BigNumber[] }>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    redemptionFeeConstant(overrides?: CallOverrides): Promise<[BigNumber]>;

    redemptionFeeScale(overrides?: CallOverrides): Promise<[BigNumber]>;

    redemptionFeeShift(overrides?: CallOverrides): Promise<[BigNumber]>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDepositFeeRatioScale(
      _depositFeeRatioScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDepositFeeScale(
      _depositFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setDustAssetRedemptionRelativeFee(
      _dustAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRedemptionFeeScale(
      _redemptionFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setRedemptionFeeShift(
      _redemptionFeeShift: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setSingleAssetDepositRelativeFee(
      _singleAssetDepositRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setSingleAssetRedemptionRelativeFee(
      _singleAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    singleAssetDepositRelativeFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    singleAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  VERSION(overrides?: CallOverrides): Promise<string>;

  VERSION_RELEASE_CANDIDATE(overrides?: CallOverrides): Promise<BigNumber>;

  'calculateDepositFees(address,address,uint256)'(
    pool: PromiseOrValue<string>,
    tco2: PromiseOrValue<string>,
    depositAmount: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<FeeDistributionStructOutput>;

  'calculateDepositFees(address,address,uint256,uint256)'(
    pool: PromiseOrValue<string>,
    erc1155: PromiseOrValue<string>,
    tokenId: PromiseOrValue<BigNumberish>,
    depositAmount: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<FeeDistributionStructOutput>;

  'calculateRedemptionFees(address,address[],uint256[],uint256[])'(
    pool: PromiseOrValue<string>,
    erc1155s: PromiseOrValue<string>[],
    tokenIds: PromiseOrValue<BigNumberish>[],
    redemptionAmounts: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<FeeDistributionStructOutput>;

  'calculateRedemptionFees(address,address[],uint256[])'(
    pool: PromiseOrValue<string>,
    tco2s: PromiseOrValue<string>[],
    redemptionAmounts: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<FeeDistributionStructOutput>;

  depositFeeRatioScale(overrides?: CallOverrides): Promise<BigNumber>;

  depositFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

  dustAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

  feeSetup(
    recipients: PromiseOrValue<string>[],
    shares: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getFeeSetup(
    overrides?: CallOverrides
  ): Promise<[string[], BigNumber[]] & { recipients: string[]; shares: BigNumber[] }>;

  owner(overrides?: CallOverrides): Promise<string>;

  redemptionFeeConstant(overrides?: CallOverrides): Promise<BigNumber>;

  redemptionFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

  redemptionFeeShift(overrides?: CallOverrides): Promise<BigNumber>;

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDepositFeeRatioScale(
    _depositFeeRatioScale: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDepositFeeScale(
    _depositFeeScale: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setDustAssetRedemptionRelativeFee(
    _dustAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRedemptionFeeScale(
    _redemptionFeeScale: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setRedemptionFeeShift(
    _redemptionFeeShift: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setSingleAssetDepositRelativeFee(
    _singleAssetDepositRelativeFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setSingleAssetRedemptionRelativeFee(
    _singleAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  singleAssetDepositRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

  singleAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    VERSION(overrides?: CallOverrides): Promise<string>;

    VERSION_RELEASE_CANDIDATE(overrides?: CallOverrides): Promise<BigNumber>;

    'calculateDepositFees(address,address,uint256)'(
      pool: PromiseOrValue<string>,
      tco2: PromiseOrValue<string>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<FeeDistributionStructOutput>;

    'calculateDepositFees(address,address,uint256,uint256)'(
      pool: PromiseOrValue<string>,
      erc1155: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<FeeDistributionStructOutput>;

    'calculateRedemptionFees(address,address[],uint256[],uint256[])'(
      pool: PromiseOrValue<string>,
      erc1155s: PromiseOrValue<string>[],
      tokenIds: PromiseOrValue<BigNumberish>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<FeeDistributionStructOutput>;

    'calculateRedemptionFees(address,address[],uint256[])'(
      pool: PromiseOrValue<string>,
      tco2s: PromiseOrValue<string>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<FeeDistributionStructOutput>;

    depositFeeRatioScale(overrides?: CallOverrides): Promise<BigNumber>;

    depositFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

    dustAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    feeSetup(
      recipients: PromiseOrValue<string>[],
      shares: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    getFeeSetup(
      overrides?: CallOverrides
    ): Promise<[string[], BigNumber[]] & { recipients: string[]; shares: BigNumber[] }>;

    owner(overrides?: CallOverrides): Promise<string>;

    redemptionFeeConstant(overrides?: CallOverrides): Promise<BigNumber>;

    redemptionFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

    redemptionFeeShift(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setDepositFeeRatioScale(
      _depositFeeRatioScale: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setDepositFeeScale(
      _depositFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setDustAssetRedemptionRelativeFee(
      _dustAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRedemptionFeeScale(
      _redemptionFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setRedemptionFeeShift(
      _redemptionFeeShift: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setSingleAssetDepositRelativeFee(
      _singleAssetDepositRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setSingleAssetRedemptionRelativeFee(
      _singleAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    singleAssetDepositRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    singleAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(newOwner: PromiseOrValue<string>, overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    'DepositFeeRatioUpdated(int256)'(
      depositFeeRatioScale?: null
    ): DepositFeeRatioUpdatedEventFilter;
    DepositFeeRatioUpdated(depositFeeRatioScale?: null): DepositFeeRatioUpdatedEventFilter;

    'DepositFeeScaleUpdated(int256)'(depositFeeScale?: null): DepositFeeScaleUpdatedEventFilter;
    DepositFeeScaleUpdated(depositFeeScale?: null): DepositFeeScaleUpdatedEventFilter;

    'DustAssetRedemptionRelativeFeeUpdated(int256)'(
      dustAssetRedemptionRelativeFee?: null
    ): DustAssetRedemptionRelativeFeeUpdatedEventFilter;
    DustAssetRedemptionRelativeFeeUpdated(
      dustAssetRedemptionRelativeFee?: null
    ): DustAssetRedemptionRelativeFeeUpdatedEventFilter;

    'FeeSetup(address[],uint256[])'(recipients?: null, shares?: null): FeeSetupEventFilter;
    FeeSetup(recipients?: null, shares?: null): FeeSetupEventFilter;

    'OwnershipTransferred(address,address)'(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    'RedemptionFeeScaleUpdated(int256)'(
      redemptionFeeScale?: null
    ): RedemptionFeeScaleUpdatedEventFilter;
    RedemptionFeeScaleUpdated(redemptionFeeScale?: null): RedemptionFeeScaleUpdatedEventFilter;

    'RedemptionFeeShift(int256)'(redemptionFeeShift?: null): RedemptionFeeShiftEventFilter;
    RedemptionFeeShift(redemptionFeeShift?: null): RedemptionFeeShiftEventFilter;

    'SingleAssetDepositRelativeFeeUpdated(int256)'(
      singleAssetDepositRelativeFee?: null
    ): SingleAssetDepositRelativeFeeUpdatedEventFilter;
    SingleAssetDepositRelativeFeeUpdated(
      singleAssetDepositRelativeFee?: null
    ): SingleAssetDepositRelativeFeeUpdatedEventFilter;

    'SingleAssetRedemptionRelativeFeeUpdated(int256)'(
      singleAssetRedemptionRelativeFee?: null
    ): SingleAssetRedemptionRelativeFeeUpdatedEventFilter;
    SingleAssetRedemptionRelativeFeeUpdated(
      singleAssetRedemptionRelativeFee?: null
    ): SingleAssetRedemptionRelativeFeeUpdatedEventFilter;
  };

  estimateGas: {
    VERSION(overrides?: CallOverrides): Promise<BigNumber>;

    VERSION_RELEASE_CANDIDATE(overrides?: CallOverrides): Promise<BigNumber>;

    'calculateDepositFees(address,address,uint256)'(
      pool: PromiseOrValue<string>,
      tco2: PromiseOrValue<string>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'calculateDepositFees(address,address,uint256,uint256)'(
      pool: PromiseOrValue<string>,
      erc1155: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'calculateRedemptionFees(address,address[],uint256[],uint256[])'(
      pool: PromiseOrValue<string>,
      erc1155s: PromiseOrValue<string>[],
      tokenIds: PromiseOrValue<BigNumberish>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    'calculateRedemptionFees(address,address[],uint256[])'(
      pool: PromiseOrValue<string>,
      tco2s: PromiseOrValue<string>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositFeeRatioScale(overrides?: CallOverrides): Promise<BigNumber>;

    depositFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

    dustAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    feeSetup(
      recipients: PromiseOrValue<string>[],
      shares: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getFeeSetup(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    redemptionFeeConstant(overrides?: CallOverrides): Promise<BigNumber>;

    redemptionFeeScale(overrides?: CallOverrides): Promise<BigNumber>;

    redemptionFeeShift(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDepositFeeRatioScale(
      _depositFeeRatioScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDepositFeeScale(
      _depositFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setDustAssetRedemptionRelativeFee(
      _dustAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRedemptionFeeScale(
      _redemptionFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setRedemptionFeeShift(
      _redemptionFeeShift: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setSingleAssetDepositRelativeFee(
      _singleAssetDepositRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setSingleAssetRedemptionRelativeFee(
      _singleAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    singleAssetDepositRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    singleAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    VERSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    VERSION_RELEASE_CANDIDATE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'calculateDepositFees(address,address,uint256)'(
      pool: PromiseOrValue<string>,
      tco2: PromiseOrValue<string>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'calculateDepositFees(address,address,uint256,uint256)'(
      pool: PromiseOrValue<string>,
      erc1155: PromiseOrValue<string>,
      tokenId: PromiseOrValue<BigNumberish>,
      depositAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'calculateRedemptionFees(address,address[],uint256[],uint256[])'(
      pool: PromiseOrValue<string>,
      erc1155s: PromiseOrValue<string>[],
      tokenIds: PromiseOrValue<BigNumberish>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'calculateRedemptionFees(address,address[],uint256[])'(
      pool: PromiseOrValue<string>,
      tco2s: PromiseOrValue<string>[],
      redemptionAmounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositFeeRatioScale(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    depositFeeScale(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    dustAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    feeSetup(
      recipients: PromiseOrValue<string>[],
      shares: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getFeeSetup(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redemptionFeeConstant(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redemptionFeeScale(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    redemptionFeeShift(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDepositFeeRatioScale(
      _depositFeeRatioScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDepositFeeScale(
      _depositFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setDustAssetRedemptionRelativeFee(
      _dustAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRedemptionFeeScale(
      _redemptionFeeScale: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setRedemptionFeeShift(
      _redemptionFeeShift: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setSingleAssetDepositRelativeFee(
      _singleAssetDepositRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setSingleAssetRedemptionRelativeFee(
      _singleAssetRedemptionRelativeFee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    singleAssetDepositRelativeFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    singleAssetRedemptionRelativeFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
