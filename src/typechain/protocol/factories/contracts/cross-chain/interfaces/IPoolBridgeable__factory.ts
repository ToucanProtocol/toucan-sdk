/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IPoolBridgeable,
  IPoolBridgeableInterface,
} from '../../../../contracts/cross-chain/interfaces/IPoolBridgeable';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amount',
        type: 'uint256[]',
      },
    ],
    name: 'completeTCO2Bridging',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IPoolBridgeable__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolBridgeableInterface {
    return new utils.Interface(_abi) as IPoolBridgeableInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IPoolBridgeable {
    return new Contract(address, _abi, signerOrProvider) as IPoolBridgeable;
  }
}
