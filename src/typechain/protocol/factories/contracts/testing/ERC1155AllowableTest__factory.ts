/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  ERC1155AllowableTest,
  ERC1155AllowableTestInterface,
} from '../../../contracts/testing/ERC1155AllowableTest';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'oldValue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'allowances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'currentAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405234801561001057600080fd5b506117a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c80634e1273f4116100715780634e1273f41461013e5780634f4df4421461015e578063a22cb46514610171578063e985e9c514610184578063f242432a146101c0578063fc8009b7146101d357600080fd5b8062fdd58e146100ad57806301ffc9a7146100d35780630e89341c146100f6578063156e29f6146101165780632eb2c2d61461012b575b600080fd5b6100c06100bb366004610f00565b610204565b6040519081526020015b60405180910390f35b6100e66100e1366004610f43565b61029c565b60405190151581526020016100ca565b610109610104366004610f67565b6102ee565b6040516100ca9190610fcd565b610129610124366004610fe0565b610382565b005b61012961013936600461115f565b6103a2565b61015161014c366004611209565b610439565b6040516100ca919061130f565b61012961016c366004611322565b610563565b61012961017f36600461135b565b61065e565b6100e6610192366004611397565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101296101ce3660046113ca565b61066d565b6100c06101e136600461142f565b609760209081526000938452604080852082529284528284209052825290205481565b60006001600160a01b0383166102745760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102cd57506001600160e01b031982166303a24d0760e21b145b806102e857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606780546102fd9061146b565b80601f01602080910402602001604051908101604052809291908181526020018280546103299061146b565b80156103765780601f1061034b57610100808354040283529160200191610376565b820191906000526020600020905b81548152906001019060200180831161035957829003601f168201915b50505050509050919050565b61039d838383604051806020016040528060008152506106ab565b505050565b336001600160a01b038616148015906103c257506103c08533610192565b155b1561042557825160005b818110156104225761041287338784815181106103eb576103eb6114a5565b6020026020010151878581518110610405576104056114a5565b60200260200101516107c1565b61041b816114d1565b90506103cc565b50505b6104328585858585610895565b5050505050565b6060815183511461049e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161026b565b6000835167ffffffffffffffff8111156104ba576104ba611013565b6040519080825280602002602001820160405280156104e3578160200160208202803683370190505b50905060005b845181101561055b5761052e858281518110610507576105076114a5565b6020026020010151858381518110610521576105216114a5565b6020026020010151610204565b828281518110610540576105406114a5565b6020908102919091010152610554816114d1565b90506104e9565b509392505050565b3360009081526097602090815260408083206001600160a01b0388168452825280832086845290915290205482146105ee5760405162461bcd60e51b815260206004820152602860248201527f45524331313535416c6c6f7761626c653a20696e76616c69642063757272656e6044820152671d08185b5bdd5b9d60c21b606482015260840161026b565b3360008181526097602090815260408083206001600160a01b03891680855290835281842088855283529281902085905580518681529182018590528693917f3a9c85c6b31f7a9d7fe1478f53e1be42e85db97ca30d1789cfef9196dbc472c9910160405180910390a450505050565b610669338383610a75565b5050565b6001600160a01b038516331480159061068d575061068b8533610192565b155b1561069e5761069e853385856107c1565b6104328585858585610b55565b6001600160a01b03841661070b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b606482015260840161026b565b33600061071785610c83565b9050600061072485610c83565b905060008681526065602090815260408083206001600160a01b038b168452909152812080548792906107589084906114ea565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46107b883600089898989610cce565b50505050505050565b6001600160a01b0380851660009081526097602090815260408083209387168352928152828220858352905220548181101561085c5760405162461bcd60e51b815260206004820152603460248201527f45524331313535416c6c6f7761626c653a2063616c6c657220686173206e6f2060448201527373756666696369656e7420616c6c6f77616e636560601b606482015260840161026b565b6001600160a01b039485166000908152609760209081526040808320969097168252948552858120938152929093529290209190039055565b81518351146108f75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161026b565b6001600160a01b03841661091d5760405162461bcd60e51b815260040161026b90611502565b3360005b8451811015610a0757600085828151811061093e5761093e6114a5565b60200260200101519050600085838151811061095c5761095c6114a5565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156109ad5760405162461bcd60e51b815260040161026b90611547565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109ec9084906114ea565b9250508190555050505080610a00906114d1565b9050610921565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a57929190611591565b60405180910390a4610a6d818787878787610e29565b505050505050565b816001600160a01b0316836001600160a01b031603610ae85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161026b565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610b7b5760405162461bcd60e51b815260040161026b90611502565b336000610b8785610c83565b90506000610b9485610c83565b905060008681526065602090815260408083206001600160a01b038c16845290915290205485811015610bd95760405162461bcd60e51b815260040161026b90611547565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610c189084906114ea565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610c78848a8a8a8a8a610cce565b505050505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610cbd57610cbd6114a5565b602090810291909101015292915050565b6001600160a01b0384163b15610a6d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610d1290899089908890889088906004016115bf565b6020604051808303816000875af1925050508015610d4d575060408051601f3d908101601f19168201909252610d4a91810190611604565b60015b610df957610d59611621565b806308c379a003610d925750610d6d61163d565b80610d785750610d94565b8060405162461bcd60e51b815260040161026b9190610fcd565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161026b565b6001600160e01b0319811663f23a6e6160e01b146107b85760405162461bcd60e51b815260040161026b906116c7565b6001600160a01b0384163b15610a6d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e6d908990899088908890889060040161170f565b6020604051808303816000875af1925050508015610ea8575060408051601f3d908101601f19168201909252610ea591810190611604565b60015b610eb457610d59611621565b6001600160e01b0319811663bc197c8160e01b146107b85760405162461bcd60e51b815260040161026b906116c7565b80356001600160a01b0381168114610efb57600080fd5b919050565b60008060408385031215610f1357600080fd5b610f1c83610ee4565b946020939093013593505050565b6001600160e01b031981168114610f4057600080fd5b50565b600060208284031215610f5557600080fd5b8135610f6081610f2a565b9392505050565b600060208284031215610f7957600080fd5b5035919050565b6000815180845260005b81811015610fa657602081850181015186830182015201610f8a565b81811115610fb8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610f606020830184610f80565b600080600060608486031215610ff557600080fd5b610ffe84610ee4565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561104f5761104f611013565b6040525050565b600067ffffffffffffffff82111561107057611070611013565b5060051b60200190565b600082601f83011261108b57600080fd5b8135602061109882611056565b6040516110a58282611029565b83815260059390931b85018201928281019150868411156110c557600080fd5b8286015b848110156110e057803583529183019183016110c9565b509695505050505050565b600082601f8301126110fc57600080fd5b813567ffffffffffffffff81111561111657611116611013565b60405161112d601f8301601f191660200182611029565b81815284602083860101111561114257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561117757600080fd5b61118086610ee4565b945061118e60208701610ee4565b9350604086013567ffffffffffffffff808211156111ab57600080fd5b6111b789838a0161107a565b945060608801359150808211156111cd57600080fd5b6111d989838a0161107a565b935060808801359150808211156111ef57600080fd5b506111fc888289016110eb565b9150509295509295909350565b6000806040838503121561121c57600080fd5b823567ffffffffffffffff8082111561123457600080fd5b818501915085601f83011261124857600080fd5b8135602061125582611056565b6040516112628282611029565b83815260059390931b850182019282810191508984111561128257600080fd5b948201945b838610156112a75761129886610ee4565b82529482019490820190611287565b965050860135925050808211156112bd57600080fd5b506112ca8582860161107a565b9150509250929050565b600081518084526020808501945080840160005b83811015611304578151875295820195908201906001016112e8565b509495945050505050565b602081526000610f6060208301846112d4565b6000806000806080858703121561133857600080fd5b61134185610ee4565b966020860135965060408601359560600135945092505050565b6000806040838503121561136e57600080fd5b61137783610ee4565b91506020830135801515811461138c57600080fd5b809150509250929050565b600080604083850312156113aa57600080fd5b6113b383610ee4565b91506113c160208401610ee4565b90509250929050565b600080600080600060a086880312156113e257600080fd5b6113eb86610ee4565b94506113f960208701610ee4565b93506040860135925060608601359150608086013567ffffffffffffffff81111561142357600080fd5b6111fc888289016110eb565b60008060006060848603121561144457600080fd5b61144d84610ee4565b925061145b60208501610ee4565b9150604084013590509250925092565b600181811c9082168061147f57607f821691505b60208210810361149f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016114e3576114e36114bb565b5060010190565b600082198211156114fd576114fd6114bb565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6040815260006115a460408301856112d4565b82810360208401526115b681856112d4565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906115f990830184610f80565b979650505050505050565b60006020828403121561161657600080fd5b8151610f6081610f2a565b600060033d111561163a5760046000803e5060005160e01c5b90565b600060443d101561164b5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561167b57505050505090565b82850191508151818111156116935750505050505090565b843d87010160208285010111156116ad5750505050505090565b6116bc60208286010187611029565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a06040820181905260009061173b908301866112d4565b828103606084015261174d81866112d4565b905082810360808401526117618185610f80565b9897505050505050505056fea2646970667358221220546e5ec0427d1aebb67f877f8cd881c231b8d5b3f7489564b4f5f6462bf1a10364736f6c634300080e0033';

type ERC1155AllowableTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155AllowableTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155AllowableTest__factory extends ContractFactory {
  constructor(...args: ERC1155AllowableTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155AllowableTest> {
    return super.deploy(overrides || {}) as Promise<ERC1155AllowableTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155AllowableTest {
    return super.attach(address) as ERC1155AllowableTest;
  }
  override connect(signer: Signer): ERC1155AllowableTest__factory {
    return super.connect(signer) as ERC1155AllowableTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155AllowableTestInterface {
    return new utils.Interface(_abi) as ERC1155AllowableTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC1155AllowableTest {
    return new Contract(address, _abi, signerOrProvider) as ERC1155AllowableTest;
  }
}
