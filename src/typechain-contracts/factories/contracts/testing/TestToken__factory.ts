/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type { TestToken, TestTokenInterface } from '../../../contracts/testing/TestToken';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'router',
        type: 'address',
      },
    ],
    name: 'RouterUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'bridgeBurn',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'bridgeMint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'subtractedValue',
        type: 'uint256',
      },
    ],
    name: 'decreaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVintageData',
    outputs: [
      {
        components: [
          {
            internalType: 'string',
            name: 'name',
            type: 'string',
          },
          {
            internalType: 'uint64',
            name: 'startTime',
            type: 'uint64',
          },
          {
            internalType: 'uint64',
            name: 'endTime',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'projectTokenId',
            type: 'uint256',
          },
          {
            internalType: 'uint64',
            name: 'totalVintageQuantity',
            type: 'uint64',
          },
          {
            internalType: 'bool',
            name: 'isCorsiaCompliant',
            type: 'bool',
          },
          {
            internalType: 'bool',
            name: 'isCCPcompliant',
            type: 'bool',
          },
          {
            internalType: 'string',
            name: 'coBenefits',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'correspAdjustment',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'additionalCertification',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'uri',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'registry',
            type: 'string',
          },
        ],
        internalType: 'struct VintageData',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'addedValue',
        type: 'uint256',
      },
    ],
    name: 'increaseAllowance',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'router',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_router',
        type: 'address',
      },
    ],
    name: 'setRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060408051808201825260098152682a32b9ba2a37b5b2b760b91b602080830191825283518085019094526002845261151560f21b9084015281519192916200005d91600391620001c4565b50805162000073906004906020840190620001c4565b505050620000906200008a620000a860201b60201c565b620000ac565b6305f5e100620000a13382620000fe565b50620002cd565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001595760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200016d91906200026a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620001d29062000291565b90600052602060002090601f016020900481019282620001f6576000855562000241565b82601f106200021157805160ff191683800117855562000241565b8280016001018555821562000241579182015b828111156200024157825182559160200191906001019062000224565b506200024f92915062000253565b5090565b5b808211156200024f576000815560010162000254565b600082198211156200028c57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002a657607f821691505b602082108103620002c757634e487b7160e01b600052602260045260246000fd5b50919050565b610fe280620002dd6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806374f4f547116100ad578063a9059cbb11610071578063a9059cbb1461025c578063c0d786551461026f578063dd62ed3e14610282578063f2fde38b14610295578063f887ea40146102a857600080fd5b806374f4f547146101f65780638c2a993e146102095780638da5cb5b1461021c57806395d89b4114610241578063a457c2d71461024957600080fd5b8063313ce567116100f4578063313ce5671461018c5780633633f35f1461019b57806339509351146101b057806370a08231146101c3578063715018a6146101ec57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102bb565b60405161013b9190610d2c565b60405180910390f35b610157610152366004610d62565b61034d565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610d8c565b610365565b6040516012815260200161013b565b6101a3610389565b60405161013b9190610dc8565b6101576101be366004610d62565b610412565b61016b6101d1366004610efe565b6001600160a01b031660009081526020819052604090205490565b6101f4610434565b005b6101f4610204366004610d62565b610448565b6101f4610217366004610d62565b6104b5565b6005546001600160a01b03165b6040516001600160a01b03909116815260200161013b565b61012e610519565b610157610257366004610d62565b610528565b61015761026a366004610d62565b6105a3565b6101f461027d366004610efe565b6105b1565b61016b610290366004610f19565b610663565b6101f46102a3366004610efe565b61068e565b600654610229906001600160a01b031681565b6060600380546102ca90610f4c565b80601f01602080910402602001604051908101604052809291908181526020018280546102f690610f4c565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b60003361035b818585610707565b5060019392505050565b60003361037385828561082c565b61037e8585856108a6565b506001949350505050565b61040f60405180610180016040528060608152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008152602001600067ffffffffffffffff16815260200160001515815260200160001515815260200160608152602001606081526020016060815260200160608152602001606081525090565b90565b60003361035b8185856104258383610663565b61042f9190610f86565b610707565b61043c610a4a565b6104466000610aa4565b565b6006546001600160a01b031633146104a75760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920726f757465722063616e2066756e6374696f6e616c69747900000060448201526064015b60405180910390fd5b6104b18282610af6565b5050565b6006546001600160a01b0316331461050f5760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920726f757465722063616e2066756e6374696f6e616c697479000000604482015260640161049e565b6104b18282610c20565b6060600480546102ca90610f4c565b600033816105368286610663565b9050838110156105965760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161049e565b61037e8286868403610707565b60003361035b8185856108a6565b6105b9610a4a565b6001600160a01b03811661060f5760405162461bcd60e51b815260206004820152601d60248201527f526f757465722063616e6e6f74206265207a65726f2061646472657373000000604482015260640161049e565b600680546001600160a01b0319166001600160a01b0383169081179091556040519081527f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc809060200160405180910390a150565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610696610a4a565b6001600160a01b0381166106fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049e565b61070481610aa4565b50565b6001600160a01b0383166107695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161049e565b6001600160a01b0382166107ca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161049e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006108388484610663565b905060001981146108a057818110156108935760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161049e565b6108a08484848403610707565b50505050565b6001600160a01b03831661090a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161049e565b6001600160a01b03821661096c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161049e565b6001600160a01b038316600090815260208190526040902054818110156109e45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161049e565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108a0565b6005546001600160a01b031633146104465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b565760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161049e565b6001600160a01b03821660009081526020819052604090205481811015610bca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161049e565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161081f565b6001600160a01b038216610c765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161049e565b8060026000828254610c889190610f86565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000815180845260005b81811015610d0557602081850181015186830182015201610ce9565b81811115610d17576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610d3f6020830184610cdf565b9392505050565b80356001600160a01b0381168114610d5d57600080fd5b919050565b60008060408385031215610d7557600080fd5b610d7e83610d46565b946020939093013593505050565b600080600060608486031215610da157600080fd5b610daa84610d46565b9250610db860208501610d46565b9150604084013590509250925092565b6020815260008251610180806020850152610de76101a0850183610cdf565b91506020850151610e04604086018267ffffffffffffffff169052565b50604085015167ffffffffffffffff8116606086015250606085015160808501526080850151610e4060a086018267ffffffffffffffff169052565b5060a085015180151560c08601525060c085015180151560e08601525060e0850151601f19610100818786030181880152610e7b8584610cdf565b945080880151925050610120818786030181880152610e9a8584610cdf565b945080880151925050610140818786030181880152610eb98584610cdf565b945080880151925050610160818786030181880152610ed88584610cdf565b908801518782039092018488015293509050610ef48382610cdf565b9695505050505050565b600060208284031215610f1057600080fd5b610d3f82610d46565b60008060408385031215610f2c57600080fd5b610f3583610d46565b9150610f4360208401610d46565b90509250929050565b600181811c90821680610f6057607f821691505b602082108103610f8057634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610fa757634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220bffbcccf762e641a77331dd0686dd71dceb143e6b9e6e73770b5da99974d6e5e64736f6c634300080e0033';

type TestTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<TestToken> {
    return super.deploy(overrides || {}) as Promise<TestToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestToken {
    return super.attach(address) as TestToken;
  }
  override connect(signer: Signer): TestToken__factory {
    return super.connect(signer) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new utils.Interface(_abi) as TestTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TestToken {
    return new Contract(address, _abi, signerOrProvider) as TestToken;
  }
}
