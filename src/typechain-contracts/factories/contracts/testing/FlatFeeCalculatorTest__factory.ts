/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  FlatFeeCalculatorTest,
  FlatFeeCalculatorTestInterface,
} from '../../../contracts/testing/FlatFeeCalculatorTest';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeBasisPoints',
        type: 'uint256',
      },
    ],
    name: 'FeeBasisPointsUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'shares',
        type: 'uint256[]',
      },
    ],
    name: 'FeeSetup',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [],
    name: 'VERSION',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VERSION_RELEASE_CANDIDATE',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateDepositFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'depositAmount',
        type: 'uint256',
      },
    ],
    name: 'calculateDepositFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'erc1155s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'redemptionAmounts',
        type: 'uint256[]',
      },
    ],
    name: 'calculateRedemptionFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tco2s',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'redemptionAmounts',
        type: 'uint256[]',
      },
    ],
    name: 'calculateRedemptionFees',
    outputs: [
      {
        components: [
          {
            internalType: 'address[]',
            name: 'recipients',
            type: 'address[]',
          },
          {
            internalType: 'uint256[]',
            name: 'shares',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct FeeDistribution',
        name: 'feeDistribution',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeBasisPoints',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'shares',
        type: 'uint256[]',
      },
    ],
    name: 'feeSetup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFeeSetup',
    outputs: [
      {
        internalType: 'address[]',
        name: 'recipients',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'shares',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_feeBasisPoints',
        type: 'uint256',
      },
    ],
    name: 'setFeeBasisPoints',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x608060405261012c60015534801561001657600080fd5b5061002033610025565b610075565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61117f806100846000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063927542741161008c578063b8606eef11610066578063b8606eef14610193578063bf1204341461019c578063f2fde38b146101b2578063ffa1ad74146101c557600080fd5b8063927542741461015a5780639ef3009d1461016d578063a5bd84c21461018057600080fd5b80630165dd27146100d45780636ca0b0d7146100e9578063715018a614610104578063721134961461010c5780638925ba9f1461012c5780638da5cb5b1461013f575b600080fd5b6100e76100e2366004610b53565b6101f6565b005b6100f1600281565b6040519081526020015b60405180910390f35b6100e76102a2565b61011f61011a366004610bd4565b6102b6565b6040516100fb9190610c7f565b61011f61013a366004610d1d565b6103db565b6000546040516001600160a01b0390911681526020016100fb565b61011f610168366004610d59565b610400565b6100e761017b366004610e71565b610426565b61011f61018e366004610f31565b610561565b6100f160015481565b6101a461060a565b6040516100fb929190610fb2565b6100e76101c0366004611036565b6106c1565b6101e9604051806040016040528060058152602001640312e302e360dc1b81525081565b6040516100fb9190611051565b6101fe61073a565b61271081106102675760405162461bcd60e51b815260206004820152602a60248201527f46656520626173697320706f696e74732073686f756c64206265206c6573732060448201526907468616e2031303030360b41b60648201526084015b60405180910390fd5b60018190556040518181527f3a81812ce3d900b6196b2d0a225da9df123054670067cf761d52294251a967409060200160405180910390a150565b6102aa61073a565b6102b46000610794565b565b60408051808201909152606080825260208201528584146103235760405162461bcd60e51b815260206004820152602160248201527f65726331313535732f746f6b656e496473206c656e677468206d69736d6174636044820152600d60fb1b606482015260840161025e565b8582146103855760405162461bcd60e51b815260206004820152602a60248201527f65726331313535732f726564656d7074696f6e416d6f756e7473206c656e67746044820152690d040dad2e6dac2e8c6d60b31b606482015260840161025e565b60006103c38484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506107e492505050565b90506103ce81610832565b9998505050505050505050565b60408051808201909152606080825260208201526103f882610832565b949350505050565b604080518082019091526060808252602082015261041d82610832565b95945050505050565b61042e61073a565b805182511461049e5760405162461bcd60e51b815260206004820152603660248201527f526563697069656e747320616e642073686172657320617272617973206d75736044820152750e840d0c2ecca40e8d0ca40e6c2daca40d8cadccee8d60531b606482015260840161025e565b60006104a9826107e4565b9050806064146104fb5760405162461bcd60e51b815260206004820152601b60248201527f546f74616c20736861726573206d75737420657175616c203130300000000000604482015260640161025e565b825161050e906002906020860190610a9e565b508151610522906003906020850190610b03565b507f919670197286461f736c76f6283ed050bb2801865950326d8f151b1fcd64a4a28383604051610554929190610fb2565b60405180910390a1505050565b60408051808201909152606080825260208201528382146105b65760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b604482015260640161025e565b60006105f48484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506107e492505050565b90506105ff81610832565b979650505050505050565b606080600280548060200260200160405190810160405280929190818152602001828054801561066357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610645575b5050505050915060038054806020026020016040519081016040528092919081815260200182805480156106b657602002820191906000526020600020905b8154815260200190600101908083116106a2575b505050505090509091565b6106c961073a565b6001600160a01b03811661072e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61073781610794565b50565b6000546001600160a01b031633146102b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161025e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080805b835181101561082b578381815181106108045761080461109f565b60200260200101518261081791906110cb565b915080610823816110e4565b9150506107e9565b5092915050565b6040805180820190915260608082526020820152816000036108965760405162461bcd60e51b815260206004820152601c60248201527f72657175657374656420616d6f756e74206d757374206265203e203000000000604482015260640161025e565b6000612710600154846108a991906110fd565b6108b39190611114565b9050806000036109055760405162461bcd60e51b815260206004820152601a60248201527f466565206d7573742062652067726561746572207468616e2030000000000000604482015260640161025e565b61090e81610915565b9392505050565b604080518082019091526060808252602082015260025460008167ffffffffffffffff81111561094757610947610d9b565b604051908082528060200260200182016040528015610970578160200160208202803683370190505b5090508360005b83811015610a0b576064600382815481106109945761099461109f565b9060005260206000200154876109aa91906110fd565b6109b49190611114565b8382815181106109c6576109c661109f565b6020026020010181815250508281815181106109e4576109e461109f565b6020026020010151826109f79190611136565b915080610a03816110e4565b915050610977565b508082600081518110610a2057610a2061109f565b60200260200101818151610a3491906110cb565b9052506002805460408051602080840282018101909252828152929190830182828015610a8a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a6c575b505050918652505050602083015250919050565b828054828255906000526020600020908101928215610af3579160200282015b82811115610af357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610abe565b50610aff929150610b3e565b5090565b828054828255906000526020600020908101928215610af3579160200282015b82811115610af3578251825591602001919060010190610b23565b5b80821115610aff5760008155600101610b3f565b600060208284031215610b6557600080fd5b5035919050565b80356001600160a01b0381168114610b8357600080fd5b919050565b60008083601f840112610b9a57600080fd5b50813567ffffffffffffffff811115610bb257600080fd5b6020830191508360208260051b8501011115610bcd57600080fd5b9250929050565b60008060008060008060006080888a031215610bef57600080fd5b610bf888610b6c565b9650602088013567ffffffffffffffff80821115610c1557600080fd5b610c218b838c01610b88565b909850965060408a0135915080821115610c3a57600080fd5b610c468b838c01610b88565b909650945060608a0135915080821115610c5f57600080fd5b50610c6c8a828b01610b88565b989b979a50959850939692959293505050565b6020808252825160408383015280516060840181905260009291820190839060808601905b80831015610ccd5783516001600160a01b03168252928401926001929092019190840190610ca4565b5086840151868203601f190160408801528051808352908501935090840191506000905b80821015610d115783518352928401929184019160019190910190610cf1565b50909695505050505050565b600080600060608486031215610d3257600080fd5b610d3b84610b6c565b9250610d4960208501610b6c565b9150604084013590509250925092565b60008060008060808587031215610d6f57600080fd5b610d7885610b6c565b9350610d8660208601610b6c565b93969395505050506040820135916060013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610dda57610dda610d9b565b604052919050565b600067ffffffffffffffff821115610dfc57610dfc610d9b565b5060051b60200190565b600082601f830112610e1757600080fd5b81356020610e2c610e2783610de2565b610db1565b82815260059290921b84018101918181019086841115610e4b57600080fd5b8286015b84811015610e665780358352918301918301610e4f565b509695505050505050565b60008060408385031215610e8457600080fd5b823567ffffffffffffffff80821115610e9c57600080fd5b818501915085601f830112610eb057600080fd5b81356020610ec0610e2783610de2565b82815260059290921b84018101918181019089841115610edf57600080fd5b948201945b83861015610f0457610ef586610b6c565b82529482019490820190610ee4565b96505086013592505080821115610f1a57600080fd5b50610f2785828601610e06565b9150509250929050565b600080600080600060608688031215610f4957600080fd5b610f5286610b6c565b9450602086013567ffffffffffffffff80821115610f6f57600080fd5b610f7b89838a01610b88565b90965094506040880135915080821115610f9457600080fd5b50610fa188828901610b88565b969995985093965092949392505050565b604080825283519082018190526000906020906060840190828701845b82811015610ff45781516001600160a01b031684529284019290840190600101610fcf565b5050508381038285015284518082528583019183019060005b818110156110295783518352928401929184019160010161100d565b5090979650505050505050565b60006020828403121561104857600080fd5b61090e82610b6c565b600060208083528351808285015260005b8181101561107e57858101830151858201604001528201611062565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156110de576110de6110b5565b92915050565b6000600182016110f6576110f66110b5565b5060010190565b80820281158282048414176110de576110de6110b5565b60008261113157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156110de576110de6110b556fea264697066735822122099d76dbc7b2a9fd71926bca26d6d753f4ff048005b82342f08740fb85257c3ff64736f6c63430008130033';

type FlatFeeCalculatorTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlatFeeCalculatorTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlatFeeCalculatorTest__factory extends ContractFactory {
  constructor(...args: FlatFeeCalculatorTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlatFeeCalculatorTest> {
    return super.deploy(overrides || {}) as Promise<FlatFeeCalculatorTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlatFeeCalculatorTest {
    return super.attach(address) as FlatFeeCalculatorTest;
  }
  override connect(signer: Signer): FlatFeeCalculatorTest__factory {
    return super.connect(signer) as FlatFeeCalculatorTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlatFeeCalculatorTestInterface {
    return new utils.Interface(_abi) as FlatFeeCalculatorTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FlatFeeCalculatorTest {
    return new Contract(address, _abi, signerOrProvider) as FlatFeeCalculatorTest;
  }
}
