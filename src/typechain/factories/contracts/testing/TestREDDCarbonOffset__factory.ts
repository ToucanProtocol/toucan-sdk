/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../../common';
import type {
  TestREDDCarbonOffset,
  TestREDDCarbonOffsetInterface,
} from '../../../contracts/testing/TestREDDCarbonOffset';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_projectId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'projectId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a06040523480156200001157600080fd5b5060405162001d0838038062001d08833981016040819052620000349162000522565b6040805180820190915260048152631d195cdd60e21b60208201526200005a81620000be565b506200006633620000d7565b60808190526040805160208101909152600081526305f5e1009062000092903390600190849062000129565b620000b633600283604051806020016040528060008152506200012960201b60201c565b50506200077b565b8051620000d39060029060208401906200047c565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166200018f5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084015b60405180910390fd5b3360006200019d856200024b565b90506000620001ac856200024b565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290620001e09084906200053c565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46200024283600089898989620002a1565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811062000288576200028862000563565b602090810291909101015292915050565b505050505050565b620002c0846001600160a01b03166200046d60201b620005e81760201c565b15620002995760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190620002fc9089908990889088908890600401620005c9565b6020604051808303816000875af19250505080156200033a575060408051601f3d908101601f19168201909252620003379181019062000610565b60015b620003fa576200034962000643565b806308c379a003620003895750620003606200069b565b806200036d57506200038b565b8060405162461bcd60e51b81526004016200018691906200072a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840162000186565b6001600160e01b0319811663f23a6e6160e01b14620002425760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840162000186565b6001600160a01b03163b151590565b8280546200048a906200073f565b90600052602060002090601f016020900481019282620004ae5760008555620004f9565b82601f10620004c957805160ff1916838001178555620004f9565b82800160010185558215620004f9579182015b82811115620004f9578251825591602001919060010190620004dc565b50620005079291506200050b565b5090565b5b808211156200050757600081556001016200050c565b6000602082840312156200053557600080fd5b5051919050565b600082198211156200055e57634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b81811015620005a15760208185018101518683018201520162000583565b81811115620005b4576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090620006059083018462000579565b979650505050505050565b6000602082840312156200062357600080fd5b81516001600160e01b0319811681146200063c57600080fd5b9392505050565b600060033d11156200065d5760046000803e5060005160e01c5b90565b601f8201601f191681016001600160401b03811182821017156200069457634e487b7160e01b600052604160045260246000fd5b6040525050565b600060443d1015620006aa5790565b6040516003193d81016004833e81513d6001600160401b038083116024840183101715620006da57505050505090565b8285019150815181811115620006f35750505050505090565b843d87010160208285010111156200070e5750505050505090565b6200071f6020828601018762000660565b509095945050505050565b6020815260006200063c602083018462000579565b600181811c908216806200075457607f821691505b6020821081036200077557634e487b7160e01b600052602260045260246000fd5b50919050565b60805161157162000797600039600061013b01526115716000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063715018a611610071578063715018a61461017d5780638da5cb5b14610185578063a22cb465146101a0578063e985e9c5146101b3578063f242432a146101ef578063f2fde38b1461020257600080fd5b8062fdd58e146100b857806301ffc9a7146100de5780630e89341c146101015780632eb2c2d6146101215780633fafa127146101365780634e1273f41461015d575b600080fd5b6100cb6100c6366004610d10565b610215565b6040519081526020015b60405180910390f35b6100f16100ec366004610d50565b6102ab565b60405190151581526020016100d5565b61011461010f366004610d74565b6102fd565b6040516100d59190610dda565b61013461012f366004610f39565b610391565b005b6100cb7f000000000000000000000000000000000000000000000000000000000000000081565b61017061016b366004610fe3565b6103dd565b6040516100d591906110e9565b610134610507565b6003546040516001600160a01b0390911681526020016100d5565b6101346101ae3660046110fc565b61051b565b6100f16101c1366004611138565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101346101fd36600461116b565b61052a565b6101346102103660046111d0565b61056f565b60006001600160a01b0383166102855760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806102dc57506001600160e01b031982166303a24d0760e21b145b806102f757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461030c906111eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610338906111eb565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103ad57506103ad85336101c1565b6103c95760405162461bcd60e51b815260040161027c90611225565b6103d685858585856105f7565b5050505050565b606081518351146104425760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161027c565b6000835167ffffffffffffffff81111561045e5761045e610ded565b604051908082528060200260200182016040528015610487578160200160208202803683370190505b50905060005b84518110156104ff576104d28582815181106104ab576104ab611273565b60200260200101518583815181106104c5576104c5611273565b6020026020010151610215565b8282815181106104e4576104e4611273565b60209081029190910101526104f88161129f565b905061048d565b509392505050565b61050f6107d4565b610519600061082e565b565b610526338383610880565b5050565b6001600160a01b038516331480610546575061054685336101c1565b6105625760405162461bcd60e51b815260040161027c90611225565b6103d68585858585610960565b6105776107d4565b6001600160a01b0381166105dc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027c565b6105e58161082e565b50565b6001600160a01b03163b151590565b81518351146106595760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b606482015260840161027c565b6001600160a01b03841661067f5760405162461bcd60e51b815260040161027c906112b8565b3360005b84518110156107665760008582815181106106a0576106a0611273565b6020026020010151905060008583815181106106be576106be611273565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561070e5760405162461bcd60e51b815260040161027c906112fd565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061074b908490611347565b925050819055505050508061075f9061129f565b9050610683565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516107b692919061135f565b60405180910390a46107cc818787878787610a8a565b505050505050565b6003546001600160a01b031633146105195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161027c565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036108f35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161027c565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109865760405162461bcd60e51b815260040161027c906112b8565b33600061099285610bee565b9050600061099f85610bee565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156109e25760405162461bcd60e51b815260040161027c906112fd565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610a1f908490611347565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a7f848a8a8a8a8a610c39565b505050505050505050565b6001600160a01b0384163b156107cc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ace908990899088908890889060040161138d565b6020604051808303816000875af1925050508015610b09575060408051601f3d908101601f19168201909252610b06918101906113eb565b60015b610bb557610b15611408565b806308c379a003610b4e5750610b29611424565b80610b345750610b50565b8060405162461bcd60e51b815260040161027c9190610dda565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161027c565b6001600160e01b0319811663bc197c8160e01b14610be55760405162461bcd60e51b815260040161027c906114ae565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c2857610c28611273565b602090810291909101015292915050565b6001600160a01b0384163b156107cc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610c7d90899089908890889088906004016114f6565b6020604051808303816000875af1925050508015610cb8575060408051601f3d908101601f19168201909252610cb5918101906113eb565b60015b610cc457610b15611408565b6001600160e01b0319811663f23a6e6160e01b14610be55760405162461bcd60e51b815260040161027c906114ae565b80356001600160a01b0381168114610d0b57600080fd5b919050565b60008060408385031215610d2357600080fd5b610d2c83610cf4565b946020939093013593505050565b6001600160e01b0319811681146105e557600080fd5b600060208284031215610d6257600080fd5b8135610d6d81610d3a565b9392505050565b600060208284031215610d8657600080fd5b5035919050565b6000815180845260005b81811015610db357602081850181015186830182015201610d97565b81811115610dc5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610d6d6020830184610d8d565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610e2957610e29610ded565b6040525050565b600067ffffffffffffffff821115610e4a57610e4a610ded565b5060051b60200190565b600082601f830112610e6557600080fd5b81356020610e7282610e30565b604051610e7f8282610e03565b83815260059390931b8501820192828101915086841115610e9f57600080fd5b8286015b84811015610eba5780358352918301918301610ea3565b509695505050505050565b600082601f830112610ed657600080fd5b813567ffffffffffffffff811115610ef057610ef0610ded565b604051610f07601f8301601f191660200182610e03565b818152846020838601011115610f1c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610f5157600080fd5b610f5a86610cf4565b9450610f6860208701610cf4565b9350604086013567ffffffffffffffff80821115610f8557600080fd5b610f9189838a01610e54565b94506060880135915080821115610fa757600080fd5b610fb389838a01610e54565b93506080880135915080821115610fc957600080fd5b50610fd688828901610ec5565b9150509295509295909350565b60008060408385031215610ff657600080fd5b823567ffffffffffffffff8082111561100e57600080fd5b818501915085601f83011261102257600080fd5b8135602061102f82610e30565b60405161103c8282610e03565b83815260059390931b850182019282810191508984111561105c57600080fd5b948201945b838610156110815761107286610cf4565b82529482019490820190611061565b9650508601359250508082111561109757600080fd5b506110a485828601610e54565b9150509250929050565b600081518084526020808501945080840160005b838110156110de578151875295820195908201906001016110c2565b509495945050505050565b602081526000610d6d60208301846110ae565b6000806040838503121561110f57600080fd5b61111883610cf4565b91506020830135801515811461112d57600080fd5b809150509250929050565b6000806040838503121561114b57600080fd5b61115483610cf4565b915061116260208401610cf4565b90509250929050565b600080600080600060a0868803121561118357600080fd5b61118c86610cf4565b945061119a60208701610cf4565b93506040860135925060608601359150608086013567ffffffffffffffff8111156111c457600080fd5b610fd688828901610ec5565b6000602082840312156111e257600080fd5b610d6d82610cf4565b600181811c908216806111ff57607f821691505b60208210810361121f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112b1576112b1611289565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6000821982111561135a5761135a611289565b500190565b60408152600061137260408301856110ae565b828103602084015261138481856110ae565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906113b9908301866110ae565b82810360608401526113cb81866110ae565b905082810360808401526113df8185610d8d565b98975050505050505050565b6000602082840312156113fd57600080fd5b8151610d6d81610d3a565b600060033d11156114215760046000803e5060005160e01c5b90565b600060443d10156114325790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561146257505050505090565b828501915081518181111561147a5750505050505090565b843d87010160208285010111156114945750505050505090565b6114a360208286010187610e03565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061153090830184610d8d565b97965050505050505056fea26469706673582212207c437ba8f47792c43b9a90cfa12894450386f28194a4cc64cdb53e05de0d797764736f6c634300080e0033';

type TestREDDCarbonOffsetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestREDDCarbonOffsetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestREDDCarbonOffset__factory extends ContractFactory {
  constructor(...args: TestREDDCarbonOffsetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _projectId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestREDDCarbonOffset> {
    return super.deploy(_projectId, overrides || {}) as Promise<TestREDDCarbonOffset>;
  }
  override getDeployTransaction(
    _projectId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_projectId, overrides || {});
  }
  override attach(address: string): TestREDDCarbonOffset {
    return super.attach(address) as TestREDDCarbonOffset;
  }
  override connect(signer: Signer): TestREDDCarbonOffset__factory {
    return super.connect(signer) as TestREDDCarbonOffset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestREDDCarbonOffsetInterface {
    return new utils.Interface(_abi) as TestREDDCarbonOffsetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TestREDDCarbonOffset {
    return new Contract(address, _abi, signerOrProvider) as TestREDDCarbonOffset;
  }
}
