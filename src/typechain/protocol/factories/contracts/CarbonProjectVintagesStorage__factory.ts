/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  CarbonProjectVintagesStorage,
  CarbonProjectVintagesStorageInterface,
} from '../../contracts/CarbonProjectVintagesStorage';

const _abi = [
  {
    inputs: [],
    name: 'baseURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'projectVintageTokenCounter',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    name: 'pvToTokenId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint128',
        name: '',
        type: 'uint128',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'validProjectVintageIds',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'vintageData',
    outputs: [
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'uint64',
        name: 'startTime',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'endTime',
        type: 'uint64',
      },
      {
        internalType: 'uint256',
        name: 'projectTokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint64',
        name: 'totalVintageQuantity',
        type: 'uint64',
      },
      {
        internalType: 'bool',
        name: 'isCorsiaCompliant',
        type: 'bool',
      },
      {
        internalType: 'bool',
        name: 'isCCPcompliant',
        type: 'bool',
      },
      {
        internalType: 'string',
        name: 'coBenefits',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'correspAdjustment',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'additionalCertification',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'uri',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'registry',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

export class CarbonProjectVintagesStorage__factory {
  static readonly abi = _abi;
  static createInterface(): CarbonProjectVintagesStorageInterface {
    return new utils.Interface(_abi) as CarbonProjectVintagesStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CarbonProjectVintagesStorage {
    return new Contract(address, _abi, signerOrProvider) as CarbonProjectVintagesStorage;
  }
}
