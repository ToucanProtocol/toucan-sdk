/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  IRetirementCertificateFractionalizer,
  IRetirementCertificateFractionalizerInterface,
} from '../../../../contracts/retirements/interfaces/IRetirementCertificateFractionalizer';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'projectVintageTokenId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
          {
            internalType: 'string',
            name: 'beneficiaryString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'retirementMessage',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryLocation',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'consumptionCountryCode',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodStart',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodEnd',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'tokenURI',
            type: 'string',
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes',
          },
        ],
        internalType: 'struct FractionRequestData',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'mintFraction',
    outputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'projectVintageTokenId',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
          {
            internalType: 'string',
            name: 'beneficiaryString',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'retirementMessage',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'beneficiaryLocation',
            type: 'string',
          },
          {
            internalType: 'string',
            name: 'consumptionCountryCode',
            type: 'string',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodStart',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'consumptionPeriodEnd',
            type: 'uint256',
          },
          {
            internalType: 'string',
            name: 'tokenURI',
            type: 'string',
          },
          {
            internalType: 'bytes',
            name: 'extraData',
            type: 'bytes',
          },
        ],
        internalType: 'struct FractionRequestData',
        name: 'params',
        type: 'tuple',
      },
    ],
    name: 'mintFractionFrom',
    outputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class IRetirementCertificateFractionalizer__factory {
  static readonly abi = _abi;
  static createInterface(): IRetirementCertificateFractionalizerInterface {
    return new utils.Interface(_abi) as IRetirementCertificateFractionalizerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRetirementCertificateFractionalizer {
    return new Contract(address, _abi, signerOrProvider) as IRetirementCertificateFractionalizer;
  }
}
