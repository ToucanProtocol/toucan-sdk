/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type {
  ICarbonOffsetBatches,
  ICarbonOffsetBatchesInterface,
} from '../../../contracts/interfaces/ICarbonOffsetBatches';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getBatchNFTData',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'enum BatchStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getConfirmationStatus',
    outputs: [
      {
        internalType: 'enum BatchStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getSerialNumber',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'enum BatchStatus',
        name: 'newStatus',
        type: 'uint8',
      },
    ],
    name: 'setStatusForDetokenizationOrRetirement',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'tokenIdNewSerialNumber',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'newTokenIdSerialNumber',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'newTokenIdQuantity',
        type: 'uint256',
      },
    ],
    name: 'split',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;

export class ICarbonOffsetBatches__factory {
  static readonly abi = _abi;
  static createInterface(): ICarbonOffsetBatchesInterface {
    return new utils.Interface(_abi) as ICarbonOffsetBatchesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICarbonOffsetBatches {
    return new Contract(address, _abi, signerOrProvider) as ICarbonOffsetBatches;
  }
}
